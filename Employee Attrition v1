{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Project Aim: To analyze the factors leading to Employee Attrition and build a model to predict if a staff will resign "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Resigned</th>\n",
       "      <th>BusinessTravel</th>\n",
       "      <th>DailyRate($)</th>\n",
       "      <th>Department</th>\n",
       "      <th>DistanceFromHome(km)</th>\n",
       "      <th>EducationField</th>\n",
       "      <th>EmployeeNumber</th>\n",
       "      <th>EnvironmentSatisfaction</th>\n",
       "      <th>Gender</th>\n",
       "      <th>HourlyRate</th>\n",
       "      <th>JobInvolvement</th>\n",
       "      <th>JobLevel</th>\n",
       "      <th>JobRole</th>\n",
       "      <th>JobSatisfaction</th>\n",
       "      <th>MaritalStatus</th>\n",
       "      <th>MonthlyIncome($)</th>\n",
       "      <th>MonthlyRate($)</th>\n",
       "      <th>NumCompaniesWorked</th>\n",
       "      <th>Over18</th>\n",
       "      <th>OverTime</th>\n",
       "      <th>PercentSalaryHike</th>\n",
       "      <th>PerformanceRating</th>\n",
       "      <th>RelationshipSatisfaction</th>\n",
       "      <th>StandardHours</th>\n",
       "      <th>StockOptionLevel</th>\n",
       "      <th>TotalWorkingYears</th>\n",
       "      <th>TrainingTimesLastYear</th>\n",
       "      <th>WorkLifeBalance</th>\n",
       "      <th>YearsAtCompany</th>\n",
       "      <th>YearsInCurrentRole</th>\n",
       "      <th>YearsSinceLastPromotion</th>\n",
       "      <th>YearsWithCurrManager</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>41</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1102</td>\n",
       "      <td>Sales</td>\n",
       "      <td>1</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>94</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>Sales Executive</td>\n",
       "      <td>4</td>\n",
       "      <td>Single</td>\n",
       "      <td>5993</td>\n",
       "      <td>19479</td>\n",
       "      <td>8</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Frequently</td>\n",
       "      <td>279</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>8</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Male</td>\n",
       "      <td>61</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Research Scientist</td>\n",
       "      <td>2</td>\n",
       "      <td>Married</td>\n",
       "      <td>5130</td>\n",
       "      <td>24907</td>\n",
       "      <td>1</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>23</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1373</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>2</td>\n",
       "      <td>Other</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>Male</td>\n",
       "      <td>92</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>3</td>\n",
       "      <td>Single</td>\n",
       "      <td>2090</td>\n",
       "      <td>2396</td>\n",
       "      <td>6</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>15</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Frequently</td>\n",
       "      <td>1392</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>3</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>56</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Research Scientist</td>\n",
       "      <td>3</td>\n",
       "      <td>Married</td>\n",
       "      <td>2909</td>\n",
       "      <td>23159</td>\n",
       "      <td>1</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>27</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>591</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>2</td>\n",
       "      <td>Medical</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>40</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>2</td>\n",
       "      <td>Married</td>\n",
       "      <td>3468</td>\n",
       "      <td>16632</td>\n",
       "      <td>9</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age Resigned     BusinessTravel  DailyRate($)              Department  \\\n",
       "0   41      Yes      Travel_Rarely          1102                   Sales   \n",
       "1   49       No  Travel_Frequently           279  Research & Development   \n",
       "2   37      Yes      Travel_Rarely          1373  Research & Development   \n",
       "3   33       No  Travel_Frequently          1392  Research & Development   \n",
       "4   27       No      Travel_Rarely           591  Research & Development   \n",
       "\n",
       "   DistanceFromHome(km) EducationField  EmployeeNumber  \\\n",
       "0                     1  Life Sciences               1   \n",
       "1                     8  Life Sciences               2   \n",
       "2                     2          Other               4   \n",
       "3                     3  Life Sciences               5   \n",
       "4                     2        Medical               7   \n",
       "\n",
       "   EnvironmentSatisfaction  Gender  HourlyRate  JobInvolvement  JobLevel  \\\n",
       "0                        2  Female          94               3         2   \n",
       "1                        3    Male          61               2         2   \n",
       "2                        4    Male          92               2         1   \n",
       "3                        4  Female          56               3         1   \n",
       "4                        1    Male          40               3         1   \n",
       "\n",
       "                 JobRole  JobSatisfaction MaritalStatus  MonthlyIncome($)  \\\n",
       "0        Sales Executive                4        Single              5993   \n",
       "1     Research Scientist                2       Married              5130   \n",
       "2  Laboratory Technician                3        Single              2090   \n",
       "3     Research Scientist                3       Married              2909   \n",
       "4  Laboratory Technician                2       Married              3468   \n",
       "\n",
       "   MonthlyRate($)  NumCompaniesWorked Over18 OverTime  PercentSalaryHike  \\\n",
       "0           19479                   8      Y      Yes                 11   \n",
       "1           24907                   1      Y       No                 23   \n",
       "2            2396                   6      Y      Yes                 15   \n",
       "3           23159                   1      Y      Yes                 11   \n",
       "4           16632                   9      Y       No                 12   \n",
       "\n",
       "   PerformanceRating  RelationshipSatisfaction  StandardHours  \\\n",
       "0                  3                         1             80   \n",
       "1                  4                         4             80   \n",
       "2                  3                         2             80   \n",
       "3                  3                         3             80   \n",
       "4                  3                         4             80   \n",
       "\n",
       "   StockOptionLevel  TotalWorkingYears  TrainingTimesLastYear  \\\n",
       "0                 0                  8                      0   \n",
       "1                 1                 10                      3   \n",
       "2                 0                  7                      3   \n",
       "3                 0                  8                      3   \n",
       "4                 1                  6                      3   \n",
       "\n",
       "   WorkLifeBalance  YearsAtCompany  YearsInCurrentRole  \\\n",
       "0                1               6                   4   \n",
       "1                3              10                   7   \n",
       "2                3               0                   0   \n",
       "3                3               8                   7   \n",
       "4                3               2                   2   \n",
       "\n",
       "   YearsSinceLastPromotion  YearsWithCurrManager  \n",
       "0                        0                     5  \n",
       "1                        1                     7  \n",
       "2                        0                     0  \n",
       "3                        3                     0  \n",
       "4                        2                     2  "
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#importing the necessary libray\n",
    "\n",
    "import seaborn as sns\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "pd.set_option(\"display.min_rows\", 100)\n",
    "pd.set_option(\"display.max_columns\", None)\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from sklearn.metrics import precision_score, recall_score, f1_score\n",
    "from sklearn.metrics import confusion_matrix, classification_report\n",
    "from sklearn.metrics import classification_report\n",
    "\n",
    "url = r\"C:\\Users\\Jesus Is Lord\\Employee Atrition.csv\"\n",
    "emp = pd.read_csv(url)\n",
    "emp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1470, 33)"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checking the shape\n",
    "emp.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Age', 'Resigned', 'BusinessTravel', 'DailyRate($)', 'Department',\n",
       "       'DistanceFromHome(km)', 'EducationField', 'EmployeeNumber',\n",
       "       'EnvironmentSatisfaction', 'Gender', 'HourlyRate', 'JobInvolvement',\n",
       "       'JobLevel', 'JobRole', 'JobSatisfaction', 'MaritalStatus',\n",
       "       'MonthlyIncome($)', 'MonthlyRate($)', 'NumCompaniesWorked', 'Over18',\n",
       "       'OverTime', 'PercentSalaryHike', 'PerformanceRating',\n",
       "       'RelationshipSatisfaction', 'StandardHours', 'StockOptionLevel',\n",
       "       'TotalWorkingYears', 'TrainingTimesLastYear', 'WorkLifeBalance',\n",
       "       'YearsAtCompany', 'YearsInCurrentRole', 'YearsSinceLastPromotion',\n",
       "       'YearsWithCurrManager'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checking the columns\n",
    "emp.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Printing all information about the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1470 entries, 0 to 1469\n",
      "Data columns (total 33 columns):\n",
      " #   Column                    Non-Null Count  Dtype \n",
      "---  ------                    --------------  ----- \n",
      " 0   Age                       1470 non-null   int64 \n",
      " 1   Resigned                  1470 non-null   object\n",
      " 2   BusinessTravel            1470 non-null   object\n",
      " 3   DailyRate($)              1470 non-null   int64 \n",
      " 4   Department                1470 non-null   object\n",
      " 5   DistanceFromHome(km)      1470 non-null   int64 \n",
      " 6   EducationField            1470 non-null   object\n",
      " 7   EmployeeNumber            1470 non-null   int64 \n",
      " 8   EnvironmentSatisfaction   1470 non-null   int64 \n",
      " 9   Gender                    1470 non-null   object\n",
      " 10  HourlyRate                1470 non-null   int64 \n",
      " 11  JobInvolvement            1470 non-null   int64 \n",
      " 12  JobLevel                  1470 non-null   int64 \n",
      " 13  JobRole                   1470 non-null   object\n",
      " 14  JobSatisfaction           1470 non-null   int64 \n",
      " 15  MaritalStatus             1470 non-null   object\n",
      " 16  MonthlyIncome($)          1470 non-null   int64 \n",
      " 17  MonthlyRate($)            1470 non-null   int64 \n",
      " 18  NumCompaniesWorked        1470 non-null   int64 \n",
      " 19  Over18                    1470 non-null   object\n",
      " 20  OverTime                  1470 non-null   object\n",
      " 21  PercentSalaryHike         1470 non-null   int64 \n",
      " 22  PerformanceRating         1470 non-null   int64 \n",
      " 23  RelationshipSatisfaction  1470 non-null   int64 \n",
      " 24  StandardHours             1470 non-null   int64 \n",
      " 25  StockOptionLevel          1470 non-null   int64 \n",
      " 26  TotalWorkingYears         1470 non-null   int64 \n",
      " 27  TrainingTimesLastYear     1470 non-null   int64 \n",
      " 28  WorkLifeBalance           1470 non-null   int64 \n",
      " 29  YearsAtCompany            1470 non-null   int64 \n",
      " 30  YearsInCurrentRole        1470 non-null   int64 \n",
      " 31  YearsSinceLastPromotion   1470 non-null   int64 \n",
      " 32  YearsWithCurrManager      1470 non-null   int64 \n",
      "dtypes: int64(24), object(9)\n",
      "memory usage: 379.1+ KB\n"
     ]
    }
   ],
   "source": [
    "emp.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above output, we can see that we have no column with missing values. However, we still have to review the unique data points of each column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "age: \n",
      " \n",
      " [41 49 37 33 27 32 59 30 38 36 35 29 31 34 28 22 53 24 21 42 44 46 39 43\n",
      " 50 26 48 55 45 56 23 51 40 54 58 20 25 19 57 52 47 18 60]\n",
      "\n",
      " Resigned: \n",
      " ['Yes' 'No']\n",
      "\n",
      " BusinessTravel: \n",
      " ['Travel_Rarely' 'Travel_Frequently' 'Non-Travel']\n",
      "\n",
      " DailyRate($): \n",
      " [1102  279 1373 1392  591 1005 1324 1358  216 1299  809  153  670 1346\n",
      "  103 1389  334 1123 1219  371  673 1218  419  391  699 1282 1125  691\n",
      "  477  705  924 1459  125  895  813 1273  869  890  852 1141  464 1240\n",
      " 1357  994  721 1360 1065  408 1211 1229  626 1434 1488 1097 1443  515\n",
      "  853 1142  655 1115  427  653  989 1435 1223  836 1195 1339  664  318\n",
      " 1225 1328 1082  548  132  746  776  193  397  945 1214  111  573 1153\n",
      " 1400  541  432  288  669  530  632 1334  638 1093 1217 1353  120  682\n",
      "  489  807  827  871  665 1040 1420  240 1280  534 1456  658  142 1127\n",
      " 1031 1189 1354 1467  922  394 1312  750  441  684  249  841  147  528\n",
      "  594  470  957  542  802 1355 1150 1329  959 1033 1316  364  438  689\n",
      "  201 1427  857  933 1181 1395  662 1436  194  967 1496 1169 1145  630\n",
      "  303 1256  440 1450 1452  465  702 1157  602 1480 1268  713  134  526\n",
      " 1380  140  629 1356  328 1084  931  692 1069  313  894  556 1344  290\n",
      "  138  926 1261  472 1002  878  905 1180  121 1136  635 1151  644 1045\n",
      "  829 1242 1469  896  992 1052 1147 1396  663  119  979  319 1413  944\n",
      " 1323  532  818  854 1034  771 1401 1431  976 1411 1300  252 1327  832\n",
      " 1017 1199  504  505  916 1247  685  269 1416  833  307 1311  128  488\n",
      "  529 1210 1463  675 1385 1403  452  666 1158  228  996  728 1315  322\n",
      " 1479  797 1070  442  496 1372  920  688 1449 1117  636  506  444  950\n",
      "  889  555  230 1232  566 1302  812 1476  218 1132 1105  906  849  390\n",
      "  106 1249  192  553  117  185 1091  723 1220  588 1377 1018 1275  798\n",
      "  672 1162  508 1482  559  210  928 1001  549 1124  738  570 1130 1192\n",
      "  343  144 1296 1309  483  810  544 1062 1319  641 1332  756  845  593\n",
      " 1171  350  921 1144  143 1046  575  156 1283  755  304 1178  329 1362\n",
      " 1371  202  253  164 1107  759 1305  982  821 1381  480 1473  891 1063\n",
      "  645 1490  317  422 1485 1368 1448  296 1398 1349  986 1099 1116 1499\n",
      "  983 1009 1303 1274 1277  587  413 1276  988 1474  163  267  619  302\n",
      "  443  828  561  426  232 1306 1094  509  775  195  258  471  799  956\n",
      "  535 1495  446 1245  703  823 1246  622 1287  448  254 1365  538  525\n",
      "  558  782  362 1236 1112  204 1343  604 1216  646  160  238 1397  306\n",
      "  991  482 1176  913 1076  727  885  243  806  817 1410 1207 1442  693\n",
      "  929  562  608  580  970 1179  294  314  316  654  168  381  217  501\n",
      "  650  141  804  975 1090  346  430  268  167  621  527  883  954  310\n",
      "  719  725  715  657 1146  182  376  571  384  791 1111 1243 1092 1325\n",
      "  805  213  118  676 1252  286 1258  932 1041  859  720  946 1184  436\n",
      "  589  760  887 1318  625  180  586 1012  661  930  342 1230 1271 1278\n",
      "  607  130  300  583 1418 1269  379  395 1265 1222  341  868 1231  102\n",
      "  881 1383 1075  374 1086  781  177  500 1425 1454  617 1085  995 1122\n",
      "  618  546  462 1198 1272  154 1137 1188  188 1333  867  263  938  129\n",
      "  616  498 1404 1053  289 1376  231  152  882  903 1379  335  722  461\n",
      "  974 1126  840 1134  248  955  939 1391 1206  287 1441  109 1066  277\n",
      "  466 1055  265  135  247 1035  266  145 1038 1234 1109 1089  788  124\n",
      "  660 1186 1464  796  415  769 1003 1366  330 1492 1204  309 1330  469\n",
      "  697 1262 1050  770  406  203 1308  984  439  793 1451 1182  174  490\n",
      "  718  433  773  603  874  367  199  481  647 1384  902  819  862 1457\n",
      "  977  942 1402 1421 1361  917  200  150  179  696  116  363  107 1465\n",
      "  458 1212 1103  966 1010  326 1098  969 1167  694 1320  536  373  599\n",
      "  251  131  237 1429  648  735  531  429  968  879  640  412  848  360\n",
      " 1138  325 1322  299 1030  634  524  256 1060  935  495  282  206  943\n",
      "  523  507  601  855 1291 1405 1369  999 1202  285  404  736 1498 1200\n",
      " 1439  499  205  683 1462  949  652  332 1475  337  971 1174  667  560\n",
      "  172  383 1255  359  401  377  592 1445 1221  866  981  447 1326  748\n",
      "  990  405  115  790  830 1193 1423  467  271  410 1083  516  224  136\n",
      " 1029  333 1440  674 1342  898  824  492  598  740  888 1288  104 1108\n",
      "  479 1351  474  437  884 1370  264 1059  563  457 1313  241 1015  336\n",
      " 1387  170  208  671  711  737 1470  365  763  567  486  772  301  311\n",
      "  584  880  392  148  708 1259  786  370  678  146  581  918 1238  585\n",
      "  741  552  369  717  543  964  792  611  176  897  600 1054  428  181\n",
      "  211 1079  590  305  953  478 1375  244  511 1294  196  734 1239 1253\n",
      " 1128 1336  234  766  261 1194  431  572 1422 1297  574  355  207  706\n",
      "  280  726  414  352 1224  459 1254 1131  835 1172 1266  783  219 1213\n",
      " 1096 1251 1394  605 1064 1337  937  157  754 1168  155 1444  189  911\n",
      " 1321 1154  557  642  801  161 1382 1037  105  582  704  345 1120 1378\n",
      "  468  613 1023  628]\n",
      "\n",
      " Department: \n",
      " ['Sales' 'Research & Development' 'Human Resources']\n",
      "\n",
      " DistanceFromHome(km): \n",
      " [ 1  8  2  3 24 23 27 16 15 26 19 21  5 11  9  7  6 10  4 25 12 18 29 22\n",
      " 14 20 28 17 13]\n",
      "\n",
      " EducationField: \n",
      " ['Life Sciences' 'Other' 'Medical' 'Marketing' 'Technical Degree'\n",
      " 'Human Resources']\n",
      "\n",
      " EmployeeNumber: \n",
      " [   1    2    4 ... 2064 2065 2068]\n",
      "\n",
      " EnvironmentSatisfaction: \n",
      " [2 3 4 1]\n",
      "\n",
      " Gender : \n",
      " ['Female' 'Male']\n",
      "\n",
      " HourlyRate: \n",
      " [ 94  61  92  56  40  79  81  67  44  84  49  31  93  50  51  80  96  78\n",
      "  45  82  53  83  58  72  48  42  41  86  97  75  33  37  73  98  36  47\n",
      "  71  30  43  99  59  95  57  76  87  66  55  32  52  70  62  64  63  60\n",
      " 100  46  39  77  35  91  54  34  90  65  88  85  89  68  69  74  38]\n",
      "\n",
      " JobInvolvement: \n",
      " [3 2 4 1]\n",
      "\n",
      " JobLevel: \n",
      " [2 1 3 4 5]\n",
      "\n",
      " JobRole: \n",
      " ['Sales Executive' 'Research Scientist' 'Laboratory Technician'\n",
      " 'Manufacturing Director' 'Healthcare Representative' 'Manager'\n",
      " 'Sales Representative' 'Research Director' 'Human Resources']\n",
      "\n",
      " JobSatisfaction: \n",
      " [4 2 3 1]\n",
      "\n",
      " MaritalStatus: \n",
      " ['Single' 'Married' 'Divorced']\n",
      "\n",
      " MonthlyIncome($)  \n",
      " [5993 5130 2090 ... 9991 5390 4404]\n",
      "\n",
      " MonthlyRate($): \n",
      " [19479 24907  2396 ...  5174 13243 10228]\n",
      "\n",
      " NumCompaniesWorked: \n",
      " [8 1 6 9 0 4 5 2 7 3]\n",
      "\n",
      " Over18: \n",
      " ['Y']\n",
      "\n",
      " OverTime: \n",
      " ['Yes' 'No']\n",
      "\n",
      " PercentSalaryHike: \n",
      " [11 23 15 12 13 20 22 21 17 14 16 18 19 24 25]\n",
      "\n",
      " PerformanceRating: \n",
      "[3 4]\n",
      "\n",
      " RelationshipSatisfaction: \n",
      " [1 4 2 3]\n",
      "\n",
      " StandardHours: \n",
      " [80]\n",
      "\n",
      " StockOptionLevel: \n",
      " [0 1 3 2]\n",
      "\n",
      " TotalWorkingYears: \n",
      " [ 8 10  7  6 12  1 17  5  3 31 13  0 26 24 22  9 19  2 23 14 15  4 29 28\n",
      " 21 25 20 11 16 37 38 30 40 18 36 34 32 33 35 27]\n",
      "\n",
      " TrainingTimesLastYear: \n",
      " [0 3 2 5 1 4 6]\n",
      "\n",
      " WorkLifeBalance: \n",
      " [1 3 2 4]\n",
      "\n",
      " YearsAtCompany: \n",
      " [ 6 10  0  8  2  7  1  9  5  4 25  3 12 14 22 15 27 21 17 11 13 37 16 20\n",
      " 40 24 33 19 36 18 29 31 32 34 26 30 23]\n",
      "\n",
      " YearsInCurrentRole: \n",
      " [ 4  7  0  2  5  9  8  3  6 13  1 15 14 16 11 10 12 18 17]\n",
      "\n",
      " YearsSinceLastPromotion: \n",
      " [ 0  1  3  2  7  4  8  6  5 15  9 13 12 10 11 14]\n",
      "\n",
      " YearsWithCurrManager: \n",
      " [ 5  7  0  2  6  8  3 11 17  1  4 12  9 10 15 13 16 14]\n"
     ]
    }
   ],
   "source": [
    "print(\"age: \\n \\n {}\".format(emp.Age.unique()))\n",
    "\n",
    "print(\"\\n Resigned: \\n {}\".format(emp.Resigned.unique()))\n",
    "\n",
    "print(\"\\n BusinessTravel: \\n {}\".format(emp.BusinessTravel.unique()))\n",
    "\n",
    "print(\"\\n DailyRate($): \\n {}\".format(emp[\"DailyRate($)\"].unique()))\n",
    "\n",
    "print(\"\\n Department: \\n {}\".format(emp.Department.unique()))\n",
    "\n",
    "print(\"\\n DistanceFromHome(km): \\n {}\".format(emp[\"DistanceFromHome(km)\"].unique()))\n",
    "\n",
    "print(\"\\n EducationField: \\n {}\".format(emp.EducationField.unique()))\n",
    "\n",
    "print(\"\\n EmployeeNumber: \\n {}\".format(emp.EmployeeNumber.unique()))\n",
    "\n",
    "print(\"\\n EnvironmentSatisfaction: \\n {}\".format(emp.EnvironmentSatisfaction.unique()))\n",
    "\n",
    "print(\"\\n Gender : \\n {}\".format(emp.Gender.unique()))\n",
    "\n",
    "print(\"\\n HourlyRate: \\n {}\".format(emp.HourlyRate.unique()))\n",
    "\n",
    "print(\"\\n JobInvolvement: \\n {}\".format(emp.JobInvolvement.unique()))\n",
    "\n",
    "print(\"\\n JobLevel: \\n {}\".format(emp.JobLevel.unique()))\n",
    "\n",
    "print(\"\\n JobRole: \\n {}\".format(emp.JobRole.unique()))\n",
    "\n",
    "print(\"\\n JobSatisfaction: \\n {}\".format(emp.JobSatisfaction.unique()))\n",
    "\n",
    "print(\"\\n MaritalStatus: \\n {}\".format(emp.MaritalStatus.unique()))\n",
    "\n",
    "print(\"\\n MonthlyIncome($)  \\n {}\".format(emp[\"MonthlyIncome($)\"].unique()))\n",
    "\n",
    "print(\"\\n MonthlyRate($): \\n {}\".format(emp[\"MonthlyRate($)\"].unique()))\n",
    "\n",
    "print(\"\\n NumCompaniesWorked: \\n {}\".format(emp.NumCompaniesWorked.unique()))\n",
    "\n",
    "print(\"\\n Over18: \\n {}\".format(emp.Over18.unique()))\n",
    "\n",
    "print(\"\\n OverTime: \\n {}\".format(emp.OverTime.unique()))\n",
    "\n",
    "print(\"\\n PercentSalaryHike: \\n {}\".format(emp.PercentSalaryHike.unique()))\n",
    "\n",
    "print(\"\\n PerformanceRating: \\n{}\".format(emp.PerformanceRating.unique()))\n",
    "\n",
    "print(\"\\n RelationshipSatisfaction: \\n {}\".format(emp.RelationshipSatisfaction.unique()))\n",
    "\n",
    "print(\"\\n StandardHours: \\n {}\".format(emp.StandardHours.unique()))\n",
    "\n",
    "print(\"\\n StockOptionLevel: \\n {}\".format(emp.StockOptionLevel.unique()))\n",
    "\n",
    "print(\"\\n TotalWorkingYears: \\n {}\".format(emp.TotalWorkingYears.unique()))\n",
    "\n",
    "print(\"\\n TrainingTimesLastYear: \\n {}\".format(emp.TrainingTimesLastYear.unique()))\n",
    "\n",
    "print(\"\\n WorkLifeBalance: \\n {}\".format(emp.WorkLifeBalance.unique()))\n",
    "\n",
    "print(\"\\n YearsAtCompany: \\n {}\".format(emp.YearsAtCompany.unique()))\n",
    "\n",
    "print(\"\\n YearsInCurrentRole: \\n {}\".format(emp.YearsInCurrentRole.unique()))\n",
    "\n",
    "print(\"\\n YearsSinceLastPromotion: \\n {}\".format(emp.YearsSinceLastPromotion.unique()))\n",
    "\n",
    "print(\"\\n YearsWithCurrManager: \\n {}\".format(emp.YearsWithCurrManager.unique()))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the output of the unique values of each of the variables, we can now safely conclude that the data is free from wrong data input and is clean"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Exploratory Data Analysis (EDA)\n",
    "\n",
    "Next, we carried out exploratory data analysis and also visualization of some of the variables. EDA gives us a complete overview of the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pandas_profiling import ProfileReport\n",
    "\n",
    "EDA_report = ProfileReport(emp)\n",
    "EDA_report"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Data Visualisations\n",
    "\n",
    "The goal here is to carry out further visualizations in order to gain more insight into the data."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Visualizing the target (Resigned)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 345,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1296x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "labels = \"RESIGNED YES\", \"RESIGNED NO\"\n",
    "emp['Resigned'].astype(str).value_counts().plot(kind='pie',\n",
    "                            figsize=(18, 8),\n",
    "                            autopct='%1.1f%%', \n",
    "                            startangle=90,    \n",
    "                            shadow=True,       \n",
    "                            labels=labels) # add to subplot 2\n",
    "plt.title ('Rating of Job Satisfaction by Employees')\n",
    "plt.legend(labels=labels,loc='center')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the output above, we can clearly see that the data is imbalanced. We will need to balance the data as we progress."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 371,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>Age</th>\n",
       "      <th>Resigned</th>\n",
       "      <th>BusinessTravel</th>\n",
       "      <th>DailyRate($)</th>\n",
       "      <th>Department</th>\n",
       "      <th>DistanceFromHome(km)</th>\n",
       "      <th>EducationField</th>\n",
       "      <th>EmployeeNumber</th>\n",
       "      <th>EnvironmentSatisfaction</th>\n",
       "      <th>Gender</th>\n",
       "      <th>HourlyRate</th>\n",
       "      <th>JobInvolvement</th>\n",
       "      <th>JobLevel</th>\n",
       "      <th>JobRole</th>\n",
       "      <th>JobSatisfaction</th>\n",
       "      <th>MaritalStatus</th>\n",
       "      <th>MonthlyIncome($)</th>\n",
       "      <th>MonthlyRate($)</th>\n",
       "      <th>NumCompaniesWorked</th>\n",
       "      <th>Over18</th>\n",
       "      <th>OverTime</th>\n",
       "      <th>PercentSalaryHike</th>\n",
       "      <th>PerformanceRating</th>\n",
       "      <th>RelationshipSatisfaction</th>\n",
       "      <th>StandardHours</th>\n",
       "      <th>StockOptionLevel</th>\n",
       "      <th>TotalWorkingYears</th>\n",
       "      <th>TrainingTimesLastYear</th>\n",
       "      <th>WorkLifeBalance</th>\n",
       "      <th>YearsAtCompany</th>\n",
       "      <th>YearsInCurrentRole</th>\n",
       "      <th>YearsSinceLastPromotion</th>\n",
       "      <th>YearsWithCurrManager</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>41</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1102</td>\n",
       "      <td>Sales</td>\n",
       "      <td>1</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>94</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>Sales Executive</td>\n",
       "      <td>4</td>\n",
       "      <td>Single</td>\n",
       "      <td>5993</td>\n",
       "      <td>19479</td>\n",
       "      <td>8</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>37</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1373</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>2</td>\n",
       "      <td>Other</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>Male</td>\n",
       "      <td>92</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>3</td>\n",
       "      <td>Single</td>\n",
       "      <td>2090</td>\n",
       "      <td>2396</td>\n",
       "      <td>6</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>15</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>14</td>\n",
       "      <td>28</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>103</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>24</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>19</td>\n",
       "      <td>3</td>\n",
       "      <td>Male</td>\n",
       "      <td>50</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>3</td>\n",
       "      <td>Single</td>\n",
       "      <td>2028</td>\n",
       "      <td>12947</td>\n",
       "      <td>5</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>14</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>21</td>\n",
       "      <td>36</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1218</td>\n",
       "      <td>Sales</td>\n",
       "      <td>9</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>27</td>\n",
       "      <td>3</td>\n",
       "      <td>Male</td>\n",
       "      <td>82</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Sales Representative</td>\n",
       "      <td>1</td>\n",
       "      <td>Single</td>\n",
       "      <td>3407</td>\n",
       "      <td>6986</td>\n",
       "      <td>7</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>23</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>24</td>\n",
       "      <td>34</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>699</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>6</td>\n",
       "      <td>Medical</td>\n",
       "      <td>31</td>\n",
       "      <td>2</td>\n",
       "      <td>Male</td>\n",
       "      <td>83</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Research Scientist</td>\n",
       "      <td>1</td>\n",
       "      <td>Single</td>\n",
       "      <td>2960</td>\n",
       "      <td>17102</td>\n",
       "      <td>2</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   index  Age Resigned BusinessTravel  DailyRate($)              Department  \\\n",
       "0      0   41      Yes  Travel_Rarely          1102                   Sales   \n",
       "1      2   37      Yes  Travel_Rarely          1373  Research & Development   \n",
       "2     14   28      Yes  Travel_Rarely           103  Research & Development   \n",
       "3     21   36      Yes  Travel_Rarely          1218                   Sales   \n",
       "4     24   34      Yes  Travel_Rarely           699  Research & Development   \n",
       "\n",
       "   DistanceFromHome(km) EducationField  EmployeeNumber  \\\n",
       "0                     1  Life Sciences               1   \n",
       "1                     2          Other               4   \n",
       "2                    24  Life Sciences              19   \n",
       "3                     9  Life Sciences              27   \n",
       "4                     6        Medical              31   \n",
       "\n",
       "   EnvironmentSatisfaction  Gender  HourlyRate  JobInvolvement  JobLevel  \\\n",
       "0                        2  Female          94               3         2   \n",
       "1                        4    Male          92               2         1   \n",
       "2                        3    Male          50               2         1   \n",
       "3                        3    Male          82               2         1   \n",
       "4                        2    Male          83               3         1   \n",
       "\n",
       "                 JobRole  JobSatisfaction MaritalStatus  MonthlyIncome($)  \\\n",
       "0        Sales Executive                4        Single              5993   \n",
       "1  Laboratory Technician                3        Single              2090   \n",
       "2  Laboratory Technician                3        Single              2028   \n",
       "3   Sales Representative                1        Single              3407   \n",
       "4     Research Scientist                1        Single              2960   \n",
       "\n",
       "   MonthlyRate($)  NumCompaniesWorked Over18 OverTime  PercentSalaryHike  \\\n",
       "0           19479                   8      Y      Yes                 11   \n",
       "1            2396                   6      Y      Yes                 15   \n",
       "2           12947                   5      Y      Yes                 14   \n",
       "3            6986                   7      Y       No                 23   \n",
       "4           17102                   2      Y       No                 11   \n",
       "\n",
       "   PerformanceRating  RelationshipSatisfaction  StandardHours  \\\n",
       "0                  3                         1             80   \n",
       "1                  3                         2             80   \n",
       "2                  3                         2             80   \n",
       "3                  4                         2             80   \n",
       "4                  3                         3             80   \n",
       "\n",
       "   StockOptionLevel  TotalWorkingYears  TrainingTimesLastYear  \\\n",
       "0                 0                  8                      0   \n",
       "1                 0                  7                      3   \n",
       "2                 0                  6                      4   \n",
       "3                 0                 10                      4   \n",
       "4                 0                  8                      2   \n",
       "\n",
       "   WorkLifeBalance  YearsAtCompany  YearsInCurrentRole  \\\n",
       "0                1               6                   4   \n",
       "1                3               0                   0   \n",
       "2                3               4                   2   \n",
       "3                3               5                   3   \n",
       "4                3               4                   2   \n",
       "\n",
       "   YearsSinceLastPromotion  YearsWithCurrManager  \n",
       "0                        0                     5  \n",
       "1                        0                     0  \n",
       "2                        0                     3  \n",
       "3                        0                     3  \n",
       "4                        1                     3  "
      ]
     },
     "execution_count": 371,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Isolating only the resigned staff and storing in a variable called \"resigned\"\n",
    "resigned = emp[emp[\"Resigned\"] ==\"Yes\"]\n",
    "resigned = resigned.reset_index()\n",
    "resigned.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 357,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# visualizing count of resigned staff per department\n",
    "v = sns.countplot(resigned['Department'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the output above, we have more resigned employees in Research & Development Department"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 370,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(*, block=None)>"
      ]
     },
     "execution_count": 370,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Staff by Age and Resigned\n",
    "plt.style.use('ggplot')\n",
    "sns.boxplot(x = 'Resigned', y = 'Age', data = emp)\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the output above, it appears that we have staff within the average age of 28 to 40 years old resigning in the organisation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 363,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1296x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Resigned by Gender\n",
    "resigned['Gender'].astype(str).value_counts().plot(kind='pie',\n",
    "                            figsize=(18, 8),\n",
    "                            autopct='%1.1f%%', \n",
    "                            startangle=90,    \n",
    "                            shadow=True,       \n",
    "                            labels=resigned['Gender']) # add to subplot 2\n",
    "plt.title ('Resignation by Gender')\n",
    "plt.legend(labels=resigned['Gender'],loc='center')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Visualisation of all the rate attributes of both the resigned staff and current staff"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 385,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1080x720 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure() \n",
    "\n",
    "ax1 = fig.add_subplot(221) \n",
    "ax2 = fig.add_subplot(222)  \n",
    "ax3 = fig.add_subplot(223) \n",
    "ax4 = fig.add_subplot(224)  \n",
    "\n",
    "labels = 'Low','Medium','High','Very High'\n",
    "\n",
    "emp['JobSatisfaction'].astype(str).value_counts().plot(kind='pie',\n",
    "                            figsize=(15, 10),\n",
    "                            autopct='%1.1f%%', \n",
    "                            startangle=90,    \n",
    "                            shadow=True,       \n",
    "                            labels=None,ax=ax1) # add to subplot 2\n",
    "ax1.set_title ('Rating of Job Satisfaction by Employees')\n",
    "fig.legend(labels=labels,loc='center')\n",
    "\n",
    "emp['EnvironmentSatisfaction'].astype(str).value_counts().plot(kind='pie',\n",
    "                            figsize=(15, 10),\n",
    "                            autopct='%1.1f%%', \n",
    "                            startangle=90,    \n",
    "                            shadow=True,       \n",
    "                            labels=None,ax=ax2) \n",
    "ax2.set_title('Rating of Environmental Satisfaction by Employees')\n",
    "\n",
    "emp['RelationshipSatisfaction'].astype(str).value_counts().plot(kind='pie',\n",
    "                            figsize=(15, 10),\n",
    "                            autopct='%1.1f%%', \n",
    "                            startangle=90,    \n",
    "                            shadow=True,       \n",
    "                            labels=None,ax=ax3)\n",
    "ax3.set_title('Rating of Relationship Satisfaction by Employees')\n",
    "\n",
    "emp['JobInvolvement'].astype(str).value_counts().plot(kind='pie',\n",
    "                            figsize=(15, 10),\n",
    "                            autopct='%1.1f%%', \n",
    "                            startangle=90,    \n",
    "                            shadow=True,       \n",
    "                            labels=None,ax=ax4) \n",
    "ax4.set_title('Rating of Job Involvement by Employees')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 366,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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q9XqardardhsZx6NMzs7m+zsbACSk5N1342HeHl5Aej97CRO/z5Efs/Ly6tdv6fnDJWnn34agDfffJM777yzXYo4deoUO3fu5K677gLgxhtvZPLkyUDjxQJZWVk89NBDOJ3OMz7+bO1nkpiYSGJiomu5rKysDZXLaXV1dYDez87i9O9D5Pfq6ura/D2NiIg46zq3z6mcDpRjx45x5MiRJn/aavfu3Vx++eUEBgYCEBgYiNlsxmw2c/311/PTTz8BjT2Q8vJy1+NsNhvBwcHN2svLy5vMSikiIh3D7au/CgsLWbVqFRUVFc3WtfXS498f+rLb7QQFBQGwfft2IiMjAYiLiyMtLY2JEydit9spKSlhwIABmM1mfHx8KCoqIioqiry8PMaNG9emmkREpPVaNaDkX/7yF8aMGcPFF1/ssQJOnjzJV199xcyZM11tb7zxBvv27cNkMhEaGupaFxkZyciRI5k3bx5ms5np06djNjd2tmbMmEFmZiYOh4OYmBidpBcRMYDboVJdXc0NN9zg8Xs/LrnkEtauXdukbfbs2Wfd/rbbbuO2225r1t6/f39SU1M9WpuIiLSO2+dUxo4dyyeffNKetYiISBfndk/lxx9/5KOPPuLdd991nVA/TXPUi4gItCJUxo4dqznrRUSkRW6HiuarFxGRc2nVHPWffPIJeXl5rvtDEhIS+POf/9xetYmISBfjdqi888475ObmMmnSJEJCQigrK+O9997Dbref8WosERHpftwOlc2bN/PMM880GfBx8ODBPP300woVEREBWnFJ8cmTJ13zm5zm7++Pw+HweFEiItI1uR0qMTExpKWlcejQIRwOB//7v/9Leno6gwcPbs/6RESkC3H78Nd9993H2rVrmT9/PqdOneKiiy5ixIgRZ5wNUkREuqdzhspvh0i+8847uf3226mqqqJnz56YzWZqamro0aNHuxbZWa1fv54DBw4YXUansH//fgCWLl1qcCWdQ2RkJFOnTjW6DJEOd85QcWcSrraOUtxVHThwgF+KfiDcYnQlxruovvHvkz/9YGwhncDheqMrEDHOOUOlb9++1NXVMXr0aOLj4zVPye+EW2BGT88Osild2z8q3Z80TuRCc85QSUlJYf/+/eTm5vL3v/+d3r17k5CQwPDhwz06BL6IiHR9bl391bdvX+655x7S09OZMGECO3fuZObM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",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#boxplot of staff attrition by Monthlyincome \n",
    "plt.style.use('ggplot')\n",
    "sns.boxplot(x = 'Resigned', y = 'MonthlyIncome($)', data = emp)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the output above, we have staff resigning who earn lower than the mid salary of staff who have not resigned. Resigned staff earn an average income of $2500 to $5500 monthly"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 378,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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5RX+85//UK1atTxPs8yYMYMuXbowefJkNm/ezKJFixyfHT16lA8++IDFixfTr18/1q1bx4ABA/Lta8yYMYwYMYKnnnqK6OjoAh/LDYNGSkqK4y/+7t2789577zFixAjHF3ZhsNvtzJw5E3f33DfCWbZsGU2aNCEyMpKUlJQCP7zNzc0tV9vX/juvB8RFR0cTGRlJSEgIMTExxMXFOT7z9PQErn6x+/j45PmX/F916NCBwYMHc+TIEaKiorj77rux2+3cd999PPnkkzfd/881/nmMq1evzsyZM6/bfvLkyRw8eJBdu3axbt065s+fj91uZ9y4cblOMwEcO3Ys19iYTKY8w1tcXBz79+/ntddew8PDg+nTp5OVlXXDut3d3WncuDG//PIL27dvJzw8HLg67oMGDSI0NPSG+0dERDh+z0REyrLLly8TGhpKfHw8rVq1olu3bly6dInt27fz6KOPOra7cuUKcHVG+ZlnnqFfv3553tfqhx9+cKyv69mzp+MPVYBatWo5/v+5VatWxMfH37CvH3/8kXXr1gFXL/Io6LNebrgY9NoXNVz9YvL09CzUkAHQvHlzNm/e7HgdHx8PXP3r19/fH7g6A5IXLy8vrFbrTfto0aIF33zzjWOwrp06sVqtVKxYkezsbL7//vs89/X29iYoKIjY2Fjg6phcqzE/9evX595772XTpk00a9aMHTt2OGZXLl26xJkzZxxtXftr/4cffqBhw4bXtRUcHEx6ejpHjhwBrs6mJCQkYLPZSE1NpWnTpgwYMACLxeKYlfnyyy8dP7sTJ07cdHxcXV0dszQWiwUfHx88PDz4/fffOXr0aJ7b/VV4eDjffPMNhw8fdvzihoaGsmXLFsc+iYmJBfp5iYiUVdfWaJw8eZLMzEyio6Ox2WxUqFCBvXv3Ov5z6NAhAN555x1ee+01EhISCA0Ndax3vObP3+N/9efvc7PZTHZ29g37Agr0VPe/uuGMxpUrV3KtRbBardetTbjTx8QPGjSIpUuXMn78eHJycmjUqBHDhg3joYceIjo6mi+++IImTZrkuW+rVq2YP38+O3fudCwGzcu1dDhp0iRcXV25++67efLJJ3nsscd46aWXCAwMpEaNGly+fDnP/UePHs3ixYtZv3492dnZhIeHExIScsPjeuihh5g4cSL/8z//w+OPP85rr72G3W7HbDYzePBg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n6ZmzZq3vb/In+nUiUgZYrFY2L17N//85z+55557qFGjRq7Pd+/eTXJyMna7HS8vL0wmk+Mv3woVKuT6or98+TKurq74+vpy5coVPvjggwLX0apVK86fP88XX3xBVlYWly9fdgSebt268eGHH3LmzBng6gzJzp07b/lYw8PDWb9+Penp6aSnp7N27VruueeeW27HGf3daAxcXV1p1qwZBw8evG6/hx56iPDwcF599VXS09Nv+1gOHTrE3Xfffdv7i/yZZjREyoDZs2djNptxcXGhevXq3H///XTv3v267ZKSkli2bBnp6en4+PjQvXt3mjRpAly9v8KyZctYtWoVDz/8MN27d+eXX35h+PDh+Pr68thjj7Fly5YC1ePl5cU//vEPVqxYwdq1a3F1deX++++nXr169OrVC4DXXnuNtLQ0ypcvT/v27WnduvUtHfPDDz+MxWJh/PjxALRr1+6WriK5VYXZ383GoFu3bmzevJmOHTtet2/fvn3Jzs52zGzcqmPHjuHh4UHdunVvq3aRv3Kx2+12ZxchIiK3ZurUqTz77LOFftOuefPm0aVLF1q2bFmo7UrZpaAhIiIihtEaDRERETGMgoaIiIgYRkFDREREDKOgISIiIoZR0BARERHDKGiIiIiIYRQ0RERExDD/H0Whtcj2R9rBAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 557.875x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.catplot(x = 'DistanceFromHome(km)', y = 'JobRole', hue = 'Resigned', data = emp, kind = 'bar', height = 7)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The chart above shows the relationship between Distance from home, Job role and Attrition"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 383,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 557.875x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.catplot(x = 'EducationField', y = 'MonthlyIncome($)', hue = 'Resigned', data = emp, kind = 'bar', height = 7)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above chart shows relationship between Education field, monthly income and attrition"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 391,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Resigned</th>\n",
       "      <th>BusinessTravel</th>\n",
       "      <th>DailyRate($)</th>\n",
       "      <th>Department</th>\n",
       "      <th>DistanceFromHome(km)</th>\n",
       "      <th>EducationField</th>\n",
       "      <th>EmployeeNumber</th>\n",
       "      <th>EnvironmentSatisfaction</th>\n",
       "      <th>Gender</th>\n",
       "      <th>HourlyRate</th>\n",
       "      <th>JobInvolvement</th>\n",
       "      <th>JobLevel</th>\n",
       "      <th>JobRole</th>\n",
       "      <th>JobSatisfaction</th>\n",
       "      <th>MaritalStatus</th>\n",
       "      <th>MonthlyIncome($)</th>\n",
       "      <th>MonthlyRate($)</th>\n",
       "      <th>NumCompaniesWorked</th>\n",
       "      <th>Over18</th>\n",
       "      <th>OverTime</th>\n",
       "      <th>PercentSalaryHike</th>\n",
       "      <th>PerformanceRating</th>\n",
       "      <th>RelationshipSatisfaction</th>\n",
       "      <th>StandardHours</th>\n",
       "      <th>StockOptionLevel</th>\n",
       "      <th>TotalWorkingYears</th>\n",
       "      <th>TrainingTimesLastYear</th>\n",
       "      <th>WorkLifeBalance</th>\n",
       "      <th>YearsAtCompany</th>\n",
       "      <th>YearsInCurrentRole</th>\n",
       "      <th>YearsSinceLastPromotion</th>\n",
       "      <th>YearsWithCurrManager</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>41</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1102</td>\n",
       "      <td>Sales</td>\n",
       "      <td>1</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>94</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>Sales Executive</td>\n",
       "      <td>4</td>\n",
       "      <td>Single</td>\n",
       "      <td>5993</td>\n",
       "      <td>19479</td>\n",
       "      <td>8</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Frequently</td>\n",
       "      <td>279</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>8</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Male</td>\n",
       "      <td>61</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Research Scientist</td>\n",
       "      <td>2</td>\n",
       "      <td>Married</td>\n",
       "      <td>5130</td>\n",
       "      <td>24907</td>\n",
       "      <td>1</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>23</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1373</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>2</td>\n",
       "      <td>Other</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>Male</td>\n",
       "      <td>92</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>3</td>\n",
       "      <td>Single</td>\n",
       "      <td>2090</td>\n",
       "      <td>2396</td>\n",
       "      <td>6</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>15</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Frequently</td>\n",
       "      <td>1392</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>3</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>56</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Research Scientist</td>\n",
       "      <td>3</td>\n",
       "      <td>Married</td>\n",
       "      <td>2909</td>\n",
       "      <td>23159</td>\n",
       "      <td>1</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>27</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>591</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>2</td>\n",
       "      <td>Medical</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>40</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>2</td>\n",
       "      <td>Married</td>\n",
       "      <td>3468</td>\n",
       "      <td>16632</td>\n",
       "      <td>9</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age Resigned     BusinessTravel  DailyRate($)              Department  \\\n",
       "0   41      Yes      Travel_Rarely          1102                   Sales   \n",
       "1   49       No  Travel_Frequently           279  Research & Development   \n",
       "2   37      Yes      Travel_Rarely          1373  Research & Development   \n",
       "3   33       No  Travel_Frequently          1392  Research & Development   \n",
       "4   27       No      Travel_Rarely           591  Research & Development   \n",
       "\n",
       "   DistanceFromHome(km) EducationField  EmployeeNumber  \\\n",
       "0                     1  Life Sciences               1   \n",
       "1                     8  Life Sciences               2   \n",
       "2                     2          Other               4   \n",
       "3                     3  Life Sciences               5   \n",
       "4                     2        Medical               7   \n",
       "\n",
       "   EnvironmentSatisfaction  Gender  HourlyRate  JobInvolvement  JobLevel  \\\n",
       "0                        2  Female          94               3         2   \n",
       "1                        3    Male          61               2         2   \n",
       "2                        4    Male          92               2         1   \n",
       "3                        4  Female          56               3         1   \n",
       "4                        1    Male          40               3         1   \n",
       "\n",
       "                 JobRole  JobSatisfaction MaritalStatus  MonthlyIncome($)  \\\n",
       "0        Sales Executive                4        Single              5993   \n",
       "1     Research Scientist                2       Married              5130   \n",
       "2  Laboratory Technician                3        Single              2090   \n",
       "3     Research Scientist                3       Married              2909   \n",
       "4  Laboratory Technician                2       Married              3468   \n",
       "\n",
       "   MonthlyRate($)  NumCompaniesWorked Over18 OverTime  PercentSalaryHike  \\\n",
       "0           19479                   8      Y      Yes                 11   \n",
       "1           24907                   1      Y       No                 23   \n",
       "2            2396                   6      Y      Yes                 15   \n",
       "3           23159                   1      Y      Yes                 11   \n",
       "4           16632                   9      Y       No                 12   \n",
       "\n",
       "   PerformanceRating  RelationshipSatisfaction  StandardHours  \\\n",
       "0                  3                         1             80   \n",
       "1                  4                         4             80   \n",
       "2                  3                         2             80   \n",
       "3                  3                         3             80   \n",
       "4                  3                         4             80   \n",
       "\n",
       "   StockOptionLevel  TotalWorkingYears  TrainingTimesLastYear  \\\n",
       "0                 0                  8                      0   \n",
       "1                 1                 10                      3   \n",
       "2                 0                  7                      3   \n",
       "3                 0                  8                      3   \n",
       "4                 1                  6                      3   \n",
       "\n",
       "   WorkLifeBalance  YearsAtCompany  YearsInCurrentRole  \\\n",
       "0                1               6                   4   \n",
       "1                3              10                   7   \n",
       "2                3               0                   0   \n",
       "3                3               8                   7   \n",
       "4                3               2                   2   \n",
       "\n",
       "   YearsSinceLastPromotion  YearsWithCurrManager  \n",
       "0                        0                     5  \n",
       "1                        1                     7  \n",
       "2                        0                     0  \n",
       "3                        3                     0  \n",
       "4                        2                     2  "
      ]
     },
     "execution_count": 391,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "emp.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### More Visualizations: Count of resigned staff by the following variables: \"MaritalStatus\", \"NumCompaniesWorked\", \"OverTime\", \"YearsSinceLastPromotion\", \"YearsAtCompany\", \"HourlyRate\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 396,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 576x504 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 576x504 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 576x504 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 576x504 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 576x504 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAWAAAAFgCAYAAACFYaNMAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/MnkTPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAnFklEQVR4nO3de1xUdf4/8Ncwg9dpxoGhDM1cRFctqDVZtVQ2mXS32uTrw6y8JWYmaG5arW5b6m66YcKOF1BcS2t1t7IysnTLRQozNRG8IF5WXTENCwYHRhQYZubz+4OfZ0XmajIfydfzL2bOe855D+ecF4cz53xGJYQQICKioAuR3QAR0Y2KAUxEJAkDmIhIEgYwEZEkDGAiIkk0shu4GqWlpbJbICLyS2RkpMdpPAImIpKEAUxEJAkDmIhIEgYwEZEkDGAiIkkYwEREkgTtMrQLFy4gKysLp0+fhkqlQnJyMiIjI2E2m1FeXo6IiAjMmDEDWq02WC0REUmlCtZoaBkZGejVqxcSEhLgcDhQV1eHjz76CFqtFomJicjOzkZ1dTXGjh3rc168DpiIWgrp1wFfvHgRhw8fxpAhQwAAGo0G7du3R35+PuLj4wEA8fHxyM/PD0Y7RETXhaCcgigrK4NOp8Py5ctx6tQpREVFYcKECaiqqoLBYAAAGAwG2Gw2t6/PyclBTk4OACA1NRVGozEYbRMRNaugBLDT6cTJkycxceJEdO/eHWvWrEF2drbfrzeZTDCZTMpji8XSDF0SEV170k9BhIeHIzw8HN27dwcA9O/fHydPnoRer4fVagUAWK1W6HS6YLRDRHRdCEoAd+jQAeHh4cqHZ0VFRejcuTP69u2LvLw8AEBeXh7i4uKC0Q4R0XUhaFdBlJSUICsrCw6HAzfffDNSUlIghIDZbIbFYoHRaMTMmTP9ugyNV0EQUUvh7RRE0AL4WgokgDUb13ud7nhk1I9th4jII+nngImIqCkGMBGRJAxgIiJJGMBERJIwgImIJGEAExFJwgAmIpKEAUxEJAkDmIhIEgYwEZEkDGAiIkkYwEREkjCAiYgkYQATEUnCACYikoQBTEQkCQOYiEgSBjARkSQMYCIiSRjARESSMICJiCRhABMRScIAJiKShAFMRCQJA5iISBIGMBGRJAxgIiJJGMBERJIwgImIJGEAExFJwgAmIpKEAUxEJAkDmIhIEgYwEZEkDGAiIkkYwEREkjCAiYgkYQATEUnCACYikoQBTEQkiSZYC5o6dSratGmDkJAQqNVqpKamorq6GmazGeXl5YiIiMCMGTOg1WqD1RIRkVRBC2AAmDt3LnQ6nfI4OzsbMTExSExMRHZ2NrKzszF27NhgtkREJI3UUxD5+fmIj48HAMTHxyM/P19mO0REQRXUI+AFCxYAAB544AGYTCZUVVXBYDAAAAwGA2w2m9vX5eTkICcnBwCQmpoKo9Ho9zIrfUwPZF5ERNdS0AL41VdfRVhYGKqqqjB//nxERkb6/VqTyQSTyaQ8tlgsfr/W1xsMZF5ERIHylnVBOwURFhYGANDr9YiLi8Px48eh1+thtVoBAFartdH5YSKin7qgBHBtbS1qamqUnw8cOIAuXbqgb9++yMvLAwDk5eUhLi4uGO0QEV0XgnIKoqqqCmlpaQAAp9OJgQMH4u6770a3bt1gNpuRm5sLo9GImTNnBqMdIqLrgkoIIWQ3EajS0lK/azUb13ud7nhk1I9th4jIo+viHDARETXGACYikoQBTEQkCQOYiEgSBjARkSQMYCIiSRjARESSMICJiCRhABMRScIAJiKShAFMRCQJA5iISBIGMBGRJAxgIiJJGMBERJIwgImIJGEAExFJwgAmIpKEAUxEJAkDmIhIEgYwEZEkDGAiIkkYwEREkjCAiYgkYQATEUnCACYikoQBTEQkCQOYiEgSBjARkSQMYCIiSRjARESSMICJiCRhABMRScIAJiKShAFMRCQJA5iISBIGMBGRJAxgIiJJGMBERJIwgImIJNEEc2EulwuzZ89GWFgYZs+ejerqapjNZpSXlyMiIgIzZsyAVqsNZktERNIE9Qh48+bN6NSpk/I4OzsbMTExWLp0KWJiYpCdnR3MdoiIpApaAFdUVKCwsBAJCQnKc/n5+YiPjwcAxMfHIz8/P1jtEBFJF7RTEG+99RbGjh2Lmpoa5bmqqioYDAYAgMFggM1mc/vanJwc5OTkAABSU1NhNBr9Xm6lj+mBzIuI6FoKSgAXFBRAr9cjKioKxcXFAb/eZDLBZDIpjy0Wi9+v9fUGA5kXEVGgIiMjPU4LSgAfPXoUe/bswd69e2G321FTU4OlS5dCr9fDarXCYDDAarVCp9MFox0ioutCUAJ49OjRGD16NACguLgYn3zyCaZPn461a9ciLy8PiYmJyMvLQ1xcXDDaISK6Lki9DjgxMREHDhzA9OnTceDAASQmJspsh4goqFRCCCG7iUCVlpb6XavZuN7rdMcjo35sO0REHnk7B8w74YiIJGEAExFJwgAmIpKEAUxEJAkDmIhIEgYwEZEkDGAiIkkYwEREkjCAiYgkYQATEUnCACYikoQBTEQkCQOYiEgSBjARkSQMYCIiSRjARESSMICJiCRhABMRScIAJiKShAFMRCQJA5iISBIGMBGRJAxgIiJJGMBERJL4HcAbN250+/ynn356zZohIrqR+B3AH374YUDPExGRdxpfBQcPHgQAuFwu5edLfvjhB7Rt27Z5OiMi+onzGcArVqwAANjtduVnAFCpVOjQoQMmTpzYfN0REf2E+QzgzMxMAEBGRgamTZvW7A0REd0ofAbwJZeHr8vlajQtJIQXUxARBcrvAP7vf/+LN998E99++y3sdnujae+99941b4yI6KfO7wDOzMzEPffcg+TkZLRu3bo5eyIiuiH4HcAWiwVPPPEEVCpVc/ZDRHTD8PvkbVxcHPbv39+cvRAR3VD8PgKur69HWloaevbsiQ4dOjSaxqsjiIgC53cAd+7cGZ07d27OXoiIbih+B/Cjjz7anH0QEd1w/A7gK29Dvtydd955TZohIrqR+B3Al9+GDAA2mw0OhwPh4eHIyMi45o0REf3UBXQd8OVcLhc+/PBDDsZDRHSV/A7gK4WEhGDEiBGYMmUKHn74Ya+1drsdc+fOhcPhgNPpRP/+/TFq1ChUV1fDbDajvLwcERERmDFjBrRa7dW2RETUolx1AAPAgQMH/BoHIjQ0FHPnzkWbNm3gcDgwZ84c3H333di9ezdiYmKQmJiI7OxsZGdnY+zYsT+mJSKiFsPvAE5OTm702G63w263Y9KkST5fq1Kp0KZNGwCA0+mE0+mESqVCfn4+5s2bBwCIj4/HvHnzGMBEdMPwO4CfffbZRo9bt26NW2+9Fe3atfPr9S6XC7NmzcL333+PYcOGoXv37qiqqoLBYAAAGAwG2Gw2t6/NyclBTk4OACA1NRVGo9HftlHpY3og8yIiupb8DuDevXsDaAjSqqoq6PX6gIahDAkJwaJFi3DhwgWkpaXh22+/9fu1JpMJJpNJeWyxWPx+ra83GMi8iIgCFRkZ6XGa3wFcU1ODN998Ezt27IDT6YRarca9996LiRMn+n0UDADt27dH7969sW/fPuj1elitVhgMBlitVuh0Or/nQ0TU0vl9CLt69WrU1tYiLS0N69atQ1paGux2O1avXu3ztTabDRcuXADQcO64qKgInTp1Qt++fZGXlwcAyMvLQ1xc3FW+DSKilsfvI+B9+/YhIyNDGQs4MjISKSkpTc4Nu2O1WpGZmQmXywUhBAYMGIB77rkHPXr0gNlsRm5uLoxGI2bOnHn174SIqIXxO4BbtWoFm82GiIgI5TmbzQaNxvcsbr/9drz++utNnr/pppswZ84cf1sgIvpJ8TuAhwwZgvnz5+Ohhx5CREQEysvLsWnTJiQkJDRnf0REP1l+B/CIESMQFhaG7du349y5cwgLC8Pw4cMxZMiQ5uyPiOgny+8AXrNmDe677z688sorynNHjx7FW2+9hQkTJjRHb0REP2l+XwXx9ddfo1u3bo2ei4qKwvbt2695U0RENwK/A1ilUsHlcjV67tJVDUREFDi/A7hnz5549913lRB2uVx4//330bNnz2Zrjojop8zvc8BJSUlITU3FM888A6PRCIvFAoPBgFmzZjVnf0REP1l+B3B4eDgWLlyI48ePo6KiAuHh4YiOjg5oPAgiIvqfgMYDDgkJQY8ePZqrFyKiG8qPGpD9p0Z8tMDrdNX//TFInRDRjYDnD4iIJGEAExFJwgAmIpKEAUxEJAkDmIhIEgYwEZEkDGAiIkkYwEREkjCAiYgkYQATEUnCACYikoQBTEQkCQOYiEgSBjARkSQMYCIiSRjARESSMICJiCRhABMRScIAJiKShAFMRCQJA5iISBIGMBGRJAxgIiJJGMBERJIwgImIJGEAExFJwgAmIpKEAUxEJAkDmIhIEo3sBuh/9n72lNfpv/j1m0HqhIiCISgBbLFYkJmZicrKSqhUKphMJjz44IOorq6G2WxGeXk5IiIiMGPGDGi12mC0REQkXVACWK1WY9y4cYiKikJNTQ1mz56N2NhYfPnll4iJiUFiYiKys7ORnZ2NsWPHBqMlIiLpgnIO2GAwICoqCgDQtm1bdOrUCefOnUN+fj7i4+MBAPHx8cjPzw9GO0RE14WgfwhXVlaGkydPIjo6GlVVVTAYDAAaQtpmswW7HSIiaYL6IVxtbS3S09MxYcIEtGvXzu/X5eTkICcnBwCQmpoKo9Ho92srfUy/fF7lftb+542RPpfbY9IHPmsCFcj7JqLrX9AC2OFwID09HYMGDUK/fv0AAHq9HlarFQaDAVarFTqdzu1rTSYTTCaT8thisfi9XF9vMJB5NVetzHkSUfOKjIz0OC0opyCEEMjKykKnTp3w8MMPK8/37dsXeXl5AIC8vDzExcUFox0ioutCUI6Ajx49im3btqFLly548cUXAQBPPPEEEhMTYTabkZubC6PRiJkzZwajHSKi60JQArhnz55Yv36922lz5swJRgvSnNg02WdNt4f+FoROiOh6w1uRiYgkYQATEUnCACYikoQBTEQkCUdDo2b1VP4ffNa8GfdaEDohuv7wCJiISBIGMBGRJAxgIiJJGMBERJIwgImIJGEAExFJwgAmIpKEAUxEJAkDmIhIkhZ5J1zox7k+a+qHDwlCJ0REV49HwEREkjCAiYgkYQATEUnCACYikoQBTEQkCQOYiEgSBjARkSQMYCIiSRjARESSMICJiCRhABMRScIAJiKShAFMRCQJA5iISBIGMBGRJAxgIiJJGMBERJIwgImIJGEAExFJwgAmIpKEAUxEJAkDmIhIEgYwEZEkDGAiIkk0shug5vXJ1iSfNb9NWBOETojoSkEJ4OXLl6OwsBB6vR7p6ekAgOrqapjNZpSXlyMiIgIzZsyAVqsNRjtERNeFoJyC+NWvfoWXXnqp0XPZ2dmIiYnB0qVLERMTg+zs7GC0QkR03QhKAPfu3bvJ0W1+fj7i4+MBAPHx8cjPzw9GK0RE1w1pH8JVVVXBYDAAAAwGA2w2m6xWiIikaBEfwuXk5CAnJwcAkJqa6tdrjEYjAKDSzzoAKPez9lwAyz8RQO21qgtUc823pSyfSBZpAazX62G1WmEwGGC1WqHT6TzWmkwmmEymgOZvsVgA+H6Dl+oCmaes2kDmGYjmmm9LWT5Rc4qMjPQ4TdopiL59+yIvLw8AkJeXh7i4OFmtEBFJEZQj4MWLF+PQoUM4f/48pkyZglGjRiExMRFmsxm5ubkwGo2YOXNmMFohIrpuBCWAn3vuObfPz5kzJxiLJyK6LrWID+Gosbwtvu9uix8a+N1ta7f5nu+4wbxrjuha4VgQRESSMICJiCRhABMRScJzwHRVFu6c6HX6rAGrg9QJUcvFI2AiIkkYwEREkjCAiYgkYQATEUnCACYikoQBTEQkCQOYiEgSBjARkSQMYCIiSRjARESSMICJiCRhABMRScIAJiKShAFMRCQJA5iISBIGMBGRJAxgIiJJGMBERJIwgImIJGEAExFJwgAmIpKEAUxEJAkDmIhIEgYwEZEkDGAiIkkYwEREkjCAiYgkYQATEUnCACYikkQjuwGiSyZ98zefNW/0mwwAeHrXep+1q/qPaqjdudl73YAH/eiO6NrjETARkSQMYCIiSRjARESSMICJiCThh3BE/9/kHV/4rPnbvfcDAJ7Z8Y3P2pX39gMAJO8o8lq34t4Y5edpO0u81mYM6AoAeG6nzefyFw/QNfThu1U809Aq/r0r1GvdA/3rlZ/3f9XKa+1dg+wAgG+3+I6ZLkMdAIDqj9Q+a7X/5wQAhPyj3muda8z/3ov6vTKvtc7Hbm6o++C4z+U7R0YDADQbCn3WOkb08TqdR8BERJJIPwLet28f1qxZA5fLhYSEBCQmJspuiYgoKKQeAbtcLrz55pt46aWXYDab8fXXX+PMmTMyWyIiChqpAXz8+HF07NgRt9xyCzQaDe69917k5+fLbImIKGhUQggha+G7du3Cvn37MGXKFADAtm3bcOzYMTz11FON6nJycpCTkwMASE1NDXqfRETNQeoRsLvsV6lUTZ4zmUxITU31GL6zZ8/2e5mya2UvP5DaG335gdTKXn4gtbKXH0it7OUHUhvIPC+RGsDh4eGoqKhQHldUVMBgMEjsiIgoeKQGcLdu3XD27FmUlZXB4XBgx44d6Nu3r8yWiIiCRuplaGq1GhMnTsSCBQvgcrlw//3347bbbgt4PiaTqcXUyl5+ILU3+vIDqZW9/EBqZS8/kFrZyw+kNpB5XiL1QzgiohsZ74QjIpKEAUxEJIn0W5F/LH9vZV6+fDkKCwuh1+uRnp7ucX4WiwWZmZmorKyESqWCyWTCgw+6/8YEu92OuXPnwuFwwOl0on///hg1apTXfl0uF2bPno2wsDCvl61MnToVbdq0QUhICNRqtcdL8C5cuICsrCycPn0aKpUKycnJ6NGjR5O60tJSmM1m5XFZWRlGjRqFhx56yO18P/30U+Tm5kKlUuG2225DSkoKWrVqOvjK5s2bsXXrVgghkJCQ0Gh+7n7n1dXVMJvNKC8vR0REBGbMmAGtVuu2dufOnXj//ffx3Xff4S9/+Qu6devmcb7vvvsu9uzZA5VKBb1ej5SUFISFhXld7xs3bsS6devwxhtvYN26dU3q1q9fj61bt0KnaxjU5oknnkCfPn08zvNf//oXPvvsM6jVavTp0wdjx451W2s2m1FaWgoAuHjxItq1a4dFixa5rS0pKcGqVatgt9uhVqsxadIkbNmyxWNdbW0tIiIiMH36dLRr187j9uxuPdTW1rqtvXI96PV6t3Vr165FQUEBNBoNbrnlFqSkpKCmpsZtrbv15XK5vO57l9bXihUrkJaW1mS/c7e9eNpH3fUaGhrqttbTtnXlvuxp2/ZKtGBOp1NMmzZNfP/996K+vl688MIL4vTp025ri4uLxYkTJ8TMmTO9zvPcuXPixIkTQgghLl68KKZPn+5xni6XS9TU1AghhKivrxd/+MMfxNGjR73O/5NPPhGLFy8Wr732mte6lJQUUVVV5bVGCCGWLVsmcnJylB6qq6t9vsbpdIpJkyaJsrIyt9MrKipESkqKqKurE0IIkZ6eLr744osmdadOnRIzZ84UtbW1wuFwiD//+c+itLRUme7ud7527Vrx0UcfCSGE+Oijj8TatWs91p4+fVp89913Yu7cueL48eNe53vhwgXl502bNomVK1d6rBVCiPLycjF//nyRnJwsqqqq3Na999574uOPP27yvt3VFhUViT//+c/CbrcLIYSorKz0uvxL3n77bfH+++97rH311VdFYWGhEEKIgoICMXfuXLd1s2fPFsXFxUIIIbZu3SreeecdIYTn7dndevBUe+V68FS3b98+4XA4hBAN69nbPN2tL2/73uXrq7Ky0u1+52578bSPuuvVU62nbevKfdnTtu1Niz4FEcitzL179/b91wiAwWBAVFQUAKBt27bo1KkTzp0757ZWpVKhTZs2AACn0wmn0+n2RpJLKioqUFhYiISEBJ99+OPixYs4fPgwhgwZAgDQaDRo3769z9cVFRWhY8eOiIiI8Fjjcrlgt9vhdDpht9vdXp/93XffoXv37mjdujXUajV69eqF3bt3K9Pd/c7z8/MRHx8PAIiPj1fWl7vazp07IzIyssly3dW2a9dO+bmurk5ZD57W+9tvv40xY8b4rHPHXe2WLVswfPhwhIY2DIGo1+t9zlcIgZ07d+K+++7zWKtSqVBTUwOgYX0bDAa3daWlpejVqxcAIDY2Ft980zAGpaft2d168FR75XrwVHfXXXdBrW4YTrJHjx44d+6cx1p368vbvnf5+vK037nbXjzVuuvVU627Xt3ty562bW9a9CmIc+fOITw8XHkcHh6OY8eOXbP5l5WV4eTJk4iOjvZY43K5MGvWLHz//fcYNmwYunfv7rH2rbfewtixY5UdypcFCxYAAB544AG3l7iUlZVBp9Nh+fLlOHXqFKKiojBhwgRlI/Lk66+/VnZ6d8LCwvDb3/4WycnJaNWqFe666y7cddddTepuu+02vPvuuzh//jxatWqFvXv3KqcJPKmqqlLC3GAwwGbzPa6tv9555x1s27YN7dq1w9y5cz3W7dmzB2FhYejatavPeX7++efYtm0boqKiMH78eI9hevbsWRw5cgTvvvsuQkNDMW7cOK/bDQAcPnwYer0et956q8eaJ598EgsWLMDatWvhcrkwf/58t3W33XYb9uzZg7i4OOzatavRDU6XXL49+1oP/mz73upyc3Nx7733eq31tr4ur3W3vgLZ73zVXt6rp9ore121alWTfflqtu0WfQQs/LyV+WrU1tYiPT0dEyZMaPQX8EohISFYtGgRsrKycOLECXz77bdu6woKCqDX65W/8L68+uqrWLhwIV566SV8/vnnOHToUJMap9OJkydPYujQoXj99dfRunVrZGdne52vw+FAQUEB+vfv77Gmuroa+fn5yMzMxMqVK1FbW4tt27Y1qevcuTOGDx+O+fPn4y9/+Qtuv/12hITI26SeeOIJrFixAgMHDsRnn33mtqaurg4bNmzAY4895nN+Q4cOxbJly/D666/DYDDg73//u8dal8uF6upqLFiwAOPGjYPZbHa7fV7O1x9CoOHI+sknn8SKFSvw5JNPIisry21dcnIyPv/8c8yaNQs1NTXQaBofW/m7PQdS66luw4YNUKvVGDRokNdaT+vr8lq1Wu12ffm73/mqvbJXT7WX97p69eqA9mVvWnQAN9etzA6HA+np6Rg0aBD69evn12vat2+P3r17Y9++fW6nHz16FHv27MHUqVOxePFiHDx4EEuXLvU4v7CwMAAN/8rGxcXh+PGmI/WHh4cjPDxc+Svdv39/nDx50mufe/fuxc9+9jN06NDBY01RURFuvvlm6HQ6aDQa9OvXD//5z3/c1g4ZMgQLFy7En/70J2i1Wq9Hc5fej9VqBQBYrVblA65raeDAgcq/4Ff64YcfUFZWhhdffBFTp05FRUUFZs2ahcrKyia1HTp0QEhICEJCQpCQkIATJ054XGZYWBj69esHlUqF6OhohISE4Pz58x7rnU4ndu/e3eQo8Up5eXnKNjhgwAC32wEAdOrUCS+//DIWLlyI++67D7fccosyzd327Gk9+Lvte6r78ssvUVBQgOnTpysHQ77mefn6urLW1/rytd9d7spad716qr2816KiIrf78tVs2y06gJvjVmYhBLKystCpUyc8/PDDXmttNhsuXLgAoOGKiKKiInTq1Mlt7ejRo5GVlYXMzEw899xzuPPOOzF9+nS3tbW1tcq/NrW1tThw4AC6dOnSpK5Dhw4IDw9XPlEvKipC586dvfbsz1GX0WjEsWPHUFdXByGE1/dVVVUFoOHqkd27d/ucd9++fZGXlwegIVzi4uK81vvr7Nmzys979uxxe+4YALp06YI33ngDmZmZyMzMRHh4OBYuXOj2D9KlnQkAdu/e7fUuzbi4OBw8eBBAw/lYh8OBm266yWN9UVERIiMjG51CcycsLEz57+fgwYPo2LGj27pL68HlcmHDhg144IEHAHjent2tB3+3fU91+/btw8cff4xZs2ahdevWXmvdrS93te7W18svv6yca/e133naR9316qn2yl579+7tdl++mm27xd8JV1hYiLffflu5lXnEiBFu6xYvXoxDhw7h/Pnz0Ov1GDVqlPLh1eWOHDmCOXPmoEuXLspfxUuXH13p1KlTyMzMhMvlghACAwYMwMiRI332XFxcjE8++cTjZWg//PAD0tLSADQcKQ0cONDj+yopKUFWVhYcDgduvvlmpKSkeDxPWVdXh+TkZGRkZPj8N3T9+vXYsWMH1Go1unbtiilTpigb/eXmzJmD8+fPQ6PRYPz48YiJ+d/3m7n7ncfFxcFsNsNiscBoNGLmzJnQarVua7VaLVavXg2bzYb27duja9eu+OMf/+i2trCwEGfPnoVKpYLRaMTkyZMRFhbmc71PnToVr732GlavXt2krri4GCUlJVCpVIiIiMDkyZNhMBjcznPw4MHKuXiNRoNx48bhzjvv9Lj8zMxMdO/eHUOHDvX6+4qMjFQuswwNDcWkSZOwcePGJnW1tbX4/PPPAQC//OUvMXr0aKhUKo/bc/fu3ZushzNnzritdTgcjdaD0WjEiRMnmtStWbMGDodD2f66d++OwYMHu51nbm5uk/VVVlbmc9+bOnUqUlJSlH3+8v1u9+7dTbaXsWPHut1Hn332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",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 576x504 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "var = [\"MaritalStatus\", \"NumCompaniesWorked\", \"OverTime\", \"YearsSinceLastPromotion\", \"YearsAtCompany\", \"BusinessTravel\"]\n",
    "\n",
    "for i in var:\n",
    "    plt.figure(figsize = (8, 7))\n",
    "    sns.catplot(data = resigned, x = i, kind = \"count\")\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Pre Modelling"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To carry out our modelling, we start by first preprocessing our data. The following below are steps we will be carrying out in this session.\n",
    "\n",
    "1. Drop the \"Over18\" variable. It appears all the staff are over 18, therefore the variable is not important in our machine model building\n",
    "2. Convert all categorial variables to to numerical.\n",
    "3. Split the data into training and testing sets\n",
    "3. Treat the data imbalance issue"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [],
   "source": [
    "#droping the \"Over18\" variable\n",
    "emp.drop(\"Over18\", axis = 1, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1470 entries, 0 to 1469\n",
      "Data columns (total 32 columns):\n",
      " #   Column                    Non-Null Count  Dtype \n",
      "---  ------                    --------------  ----- \n",
      " 0   Age                       1470 non-null   int64 \n",
      " 1   Resigned                  1470 non-null   object\n",
      " 2   BusinessTravel            1470 non-null   object\n",
      " 3   DailyRate($)              1470 non-null   int64 \n",
      " 4   Department                1470 non-null   object\n",
      " 5   DistanceFromHome(km)      1470 non-null   int64 \n",
      " 6   EducationField            1470 non-null   object\n",
      " 7   EmployeeNumber            1470 non-null   int64 \n",
      " 8   EnvironmentSatisfaction   1470 non-null   int64 \n",
      " 9   Gender                    1470 non-null   object\n",
      " 10  HourlyRate                1470 non-null   int64 \n",
      " 11  JobInvolvement            1470 non-null   int64 \n",
      " 12  JobLevel                  1470 non-null   int64 \n",
      " 13  JobRole                   1470 non-null   object\n",
      " 14  JobSatisfaction           1470 non-null   int64 \n",
      " 15  MaritalStatus             1470 non-null   object\n",
      " 16  MonthlyIncome($)          1470 non-null   int64 \n",
      " 17  MonthlyRate($)            1470 non-null   int64 \n",
      " 18  NumCompaniesWorked        1470 non-null   int64 \n",
      " 19  OverTime                  1470 non-null   object\n",
      " 20  PercentSalaryHike         1470 non-null   int64 \n",
      " 21  PerformanceRating         1470 non-null   int64 \n",
      " 22  RelationshipSatisfaction  1470 non-null   int64 \n",
      " 23  StandardHours             1470 non-null   int64 \n",
      " 24  StockOptionLevel          1470 non-null   int64 \n",
      " 25  TotalWorkingYears         1470 non-null   int64 \n",
      " 26  TrainingTimesLastYear     1470 non-null   int64 \n",
      " 27  WorkLifeBalance           1470 non-null   int64 \n",
      " 28  YearsAtCompany            1470 non-null   int64 \n",
      " 29  YearsInCurrentRole        1470 non-null   int64 \n",
      " 30  YearsSinceLastPromotion   1470 non-null   int64 \n",
      " 31  YearsWithCurrManager      1470 non-null   int64 \n",
      "dtypes: int64(24), object(8)\n",
      "memory usage: 367.6+ KB\n"
     ]
    }
   ],
   "source": [
    "emp.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Resigned</th>\n",
       "      <th>BusinessTravel</th>\n",
       "      <th>Department</th>\n",
       "      <th>EducationField</th>\n",
       "      <th>Gender</th>\n",
       "      <th>JobRole</th>\n",
       "      <th>MaritalStatus</th>\n",
       "      <th>OverTime</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>Sales</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>Female</td>\n",
       "      <td>Sales Executive</td>\n",
       "      <td>Single</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Frequently</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>Male</td>\n",
       "      <td>Research Scientist</td>\n",
       "      <td>Married</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>Other</td>\n",
       "      <td>Male</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>Single</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Frequently</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>Female</td>\n",
       "      <td>Research Scientist</td>\n",
       "      <td>Married</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>Medical</td>\n",
       "      <td>Male</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>Married</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Resigned     BusinessTravel              Department EducationField  Gender  \\\n",
       "0      Yes      Travel_Rarely                   Sales  Life Sciences  Female   \n",
       "1       No  Travel_Frequently  Research & Development  Life Sciences    Male   \n",
       "2      Yes      Travel_Rarely  Research & Development          Other    Male   \n",
       "3       No  Travel_Frequently  Research & Development  Life Sciences  Female   \n",
       "4       No      Travel_Rarely  Research & Development        Medical    Male   \n",
       "\n",
       "                 JobRole MaritalStatus OverTime  \n",
       "0        Sales Executive        Single      Yes  \n",
       "1     Research Scientist       Married       No  \n",
       "2  Laboratory Technician        Single      Yes  \n",
       "3     Research Scientist       Married      Yes  \n",
       "4  Laboratory Technician       Married       No  "
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#To convert all the categorical values to numerical we first determine all the cateorical values\n",
    "emp.select_dtypes(include='object').head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Applying label encoder to the selected categorical variables\n",
    "label_encoder = LabelEncoder()\n",
    "emp['Resigned'] = label_encoder.fit_transform(emp['Resigned'])\n",
    "emp['BusinessTravel'] = label_encoder.fit_transform(emp['BusinessTravel'])\n",
    "emp['Department'] = label_encoder.fit_transform(emp['Department'])\n",
    "emp['EducationField'] = label_encoder.fit_transform(emp['EducationField'])\n",
    "emp['Gender'] = label_encoder.fit_transform(emp['Gender'])\n",
    "emp['JobRole'] = label_encoder.fit_transform(emp['JobRole'])\n",
    "emp['MaritalStatus'] = label_encoder.fit_transform(emp['MaritalStatus'])\n",
    "emp['OverTime'] = label_encoder.fit_transform(emp['OverTime'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Resigned</th>\n",
       "      <th>BusinessTravel</th>\n",
       "      <th>DailyRate($)</th>\n",
       "      <th>Department</th>\n",
       "      <th>DistanceFromHome(km)</th>\n",
       "      <th>EducationField</th>\n",
       "      <th>EmployeeNumber</th>\n",
       "      <th>EnvironmentSatisfaction</th>\n",
       "      <th>Gender</th>\n",
       "      <th>HourlyRate</th>\n",
       "      <th>JobInvolvement</th>\n",
       "      <th>JobLevel</th>\n",
       "      <th>JobRole</th>\n",
       "      <th>JobSatisfaction</th>\n",
       "      <th>MaritalStatus</th>\n",
       "      <th>MonthlyIncome($)</th>\n",
       "      <th>MonthlyRate($)</th>\n",
       "      <th>NumCompaniesWorked</th>\n",
       "      <th>OverTime</th>\n",
       "      <th>PercentSalaryHike</th>\n",
       "      <th>PerformanceRating</th>\n",
       "      <th>RelationshipSatisfaction</th>\n",
       "      <th>StandardHours</th>\n",
       "      <th>StockOptionLevel</th>\n",
       "      <th>TotalWorkingYears</th>\n",
       "      <th>TrainingTimesLastYear</th>\n",
       "      <th>WorkLifeBalance</th>\n",
       "      <th>YearsAtCompany</th>\n",
       "      <th>YearsInCurrentRole</th>\n",
       "      <th>YearsSinceLastPromotion</th>\n",
       "      <th>YearsWithCurrManager</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1102</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>94</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>5993</td>\n",
       "      <td>19479</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>279</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>61</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>5130</td>\n",
       "      <td>24907</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1373</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>92</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2090</td>\n",
       "      <td>2396</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1392</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>56</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2909</td>\n",
       "      <td>23159</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>591</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3468</td>\n",
       "      <td>16632</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age  Resigned  BusinessTravel  DailyRate($)  Department  \\\n",
       "0   41         1               2          1102           2   \n",
       "1   49         0               1           279           1   \n",
       "2   37         1               2          1373           1   \n",
       "3   33         0               1          1392           1   \n",
       "4   27         0               2           591           1   \n",
       "\n",
       "   DistanceFromHome(km)  EducationField  EmployeeNumber  \\\n",
       "0                     1               1               1   \n",
       "1                     8               1               2   \n",
       "2                     2               4               4   \n",
       "3                     3               1               5   \n",
       "4                     2               3               7   \n",
       "\n",
       "   EnvironmentSatisfaction  Gender  HourlyRate  JobInvolvement  JobLevel  \\\n",
       "0                        2       0          94               3         2   \n",
       "1                        3       1          61               2         2   \n",
       "2                        4       1          92               2         1   \n",
       "3                        4       0          56               3         1   \n",
       "4                        1       1          40               3         1   \n",
       "\n",
       "   JobRole  JobSatisfaction  MaritalStatus  MonthlyIncome($)  MonthlyRate($)  \\\n",
       "0        7                4              2              5993           19479   \n",
       "1        6                2              1              5130           24907   \n",
       "2        2                3              2              2090            2396   \n",
       "3        6                3              1              2909           23159   \n",
       "4        2                2              1              3468           16632   \n",
       "\n",
       "   NumCompaniesWorked  OverTime  PercentSalaryHike  PerformanceRating  \\\n",
       "0                   8         1                 11                  3   \n",
       "1                   1         0                 23                  4   \n",
       "2                   6         1                 15                  3   \n",
       "3                   1         1                 11                  3   \n",
       "4                   9         0                 12                  3   \n",
       "\n",
       "   RelationshipSatisfaction  StandardHours  StockOptionLevel  \\\n",
       "0                         1             80                 0   \n",
       "1                         4             80                 1   \n",
       "2                         2             80                 0   \n",
       "3                         3             80                 0   \n",
       "4                         4             80                 1   \n",
       "\n",
       "   TotalWorkingYears  TrainingTimesLastYear  WorkLifeBalance  YearsAtCompany  \\\n",
       "0                  8                      0                1               6   \n",
       "1                 10                      3                3              10   \n",
       "2                  7                      3                3               0   \n",
       "3                  8                      3                3               8   \n",
       "4                  6                      3                3               2   \n",
       "\n",
       "   YearsInCurrentRole  YearsSinceLastPromotion  YearsWithCurrManager  \n",
       "0                   4                        0                     5  \n",
       "1                   7                        1                     7  \n",
       "2                   0                        0                     0  \n",
       "3                   7                        3                     0  \n",
       "4                   2                        2                     2  "
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#printing the emp dataframe first five rows\n",
    "emp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1470, 32)"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "emp.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age                         int64\n",
       "Resigned                    int32\n",
       "BusinessTravel              int32\n",
       "DailyRate($)                int64\n",
       "Department                  int32\n",
       "DistanceFromHome(km)        int64\n",
       "EducationField              int32\n",
       "EmployeeNumber              int64\n",
       "EnvironmentSatisfaction     int64\n",
       "Gender                      int32\n",
       "HourlyRate                  int64\n",
       "JobInvolvement              int64\n",
       "JobLevel                    int64\n",
       "JobRole                     int32\n",
       "JobSatisfaction             int64\n",
       "MaritalStatus               int32\n",
       "MonthlyIncome($)            int64\n",
       "MonthlyRate($)              int64\n",
       "NumCompaniesWorked          int64\n",
       "OverTime                    int32\n",
       "PercentSalaryHike           int64\n",
       "PerformanceRating           int64\n",
       "RelationshipSatisfaction    int64\n",
       "StandardHours               int64\n",
       "StockOptionLevel            int64\n",
       "TotalWorkingYears           int64\n",
       "TrainingTimesLastYear       int64\n",
       "WorkLifeBalance             int64\n",
       "YearsAtCompany              int64\n",
       "YearsInCurrentRole          int64\n",
       "YearsSinceLastPromotion     int64\n",
       "YearsWithCurrManager        int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checking the dtypes\n",
    "emp.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Next we isolate the target variable from the features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [],
   "source": [
    "label = emp[\"Resigned\"].values\n",
    "features =  emp.drop(\"Resigned\", axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    83.88%\n",
       "1    16.12%\n",
       "Name: Resigned, dtype: object"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checking the value count of the target variable datapoints \n",
    "\n",
    "emp[\"Resigned\"].value_counts(normalize = True).mul(100).round(2).astype(str) + \"%\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### From the output above, we can see that the data is not balancesd. We therefore treat the imbalance issue by applying a method called oversampling."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original target shape: Counter({0: 1233, 1: 237})\n",
      "Resampled target shape: Counter({1: 1233, 0: 1233})\n"
     ]
    }
   ],
   "source": [
    "#importing the necessary libraries\n",
    "from collections import Counter\n",
    "import imblearn\n",
    "from imblearn.over_sampling import SMOTE\n",
    "\n",
    "smote = SMOTE()\n",
    "\n",
    "features_smote, label_smote = smote.fit_resample(features, label)\n",
    "print(\"Original target shape: {}\".format(Counter(label)))\n",
    "print(\"Resampled target shape: {}\".format(Counter(label_smote)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Spliting the dataset\n",
    "\n",
    "We split the data into training and testing sets at a ratio of 80:20.   80% for training while 20% for testing. We will be spliting the dataset in two categories as well, which are \"the balanced data\" and \"imbalanced data\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "#spliting the data into training set and test set for balanced data\n",
    "\n",
    "x_train_bal, x_test_bal, y_train_bal, y_test_bal = train_test_split(features_smote, label_smote, test_size=0.2, random_state=0)\n",
    "\n",
    "\n",
    "#spliting the data into training set and test set for imbalanced data\n",
    "x_train_imb, x_test_imb, y_train_imb, y_test_imb = train_test_split(features, label, test_size=0.2, random_state=0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Next we nomalize the x_test and x_train datasets by applying the a scaling method called MinMaxScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((1972, 31), (494, 31), (1972,), (494,))"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#normalizing the data (the balance set) using MinMaxScaler library\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "\n",
    "scaler= MinMaxScaler()\n",
    "x_train_bal = scaler.fit_transform(x_train_bal)\n",
    "x_test_bal = scaler.transform(x_test_bal)\n",
    "x_train_bal.shape, x_test_bal.shape, y_train_bal.shape, y_test_bal.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((1176, 31), (294, 31), (1176,), (294,))"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#normalizing the data (the imbalance set) using MinMaxScaler library\n",
    "\n",
    "x_train_imb = scaler.fit_transform(x_train_imb)\n",
    "x_test_imb = scaler.transform(x_test_imb)\n",
    "x_train_imb.shape, x_test_imb.shape, y_train_imb.shape, y_test_imb.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model Building\n",
    "We will be defining a functions to build our models and check our accuracy metrics. We will be building our model with the two different data sets.\n",
    "* First: The balanced data\n",
    "* Second: The imbalanced data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 255,
   "metadata": {},
   "outputs": [],
   "source": [
    "def modelling (model_name, x_train, x_test, y_train, y_test):\n",
    "    #create an instance of the model\n",
    "    \n",
    "    model = model_name\n",
    "    \n",
    "    #fitting the model\n",
    "    model.fit(x_train, y_train)\n",
    "    \n",
    "    #get the training and testing accuracy\n",
    "    \n",
    "    Training_Accuracy = model.score(x_train, y_train) * 100\n",
    "    Test_Accuracy = model.score(x_test, y_test)* 100\n",
    "    \n",
    "    #checking y pred\n",
    "    y_pred = model.predict(x_test)\n",
    "    \n",
    "    #Accuracy metrics check\n",
    "    precision = precision_score(y_test, y_pred) * 100\n",
    "    recall = recall_score(y_test, y_pred) * 100\n",
    "    f_score = f1_score(y_test, y_pred) * 100\n",
    "    \n",
    "    data = {'Model': [\"model\"],\n",
    "        \"Train_acc\": [Training_Accuracy],\n",
    "        \"Test_acc\": [Test_Accuracy],\n",
    "        \"Precision\": [precision],\n",
    "        \"Recall\": [recall],\n",
    "        \"F-score\": [f_score]}http://localhost:8888/notebooks/Employee%20Atrition.ipynb#Model-Building-with-balanced-data\n",
    "    model_metrics = pd.DataFrame(data = data)\n",
    "\n",
    "    \n",
    "    return y_pred, model_metrics, model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model Building with balanced data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1. Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 256,
   "metadata": {},
   "outputs": [],
   "source": [
    "#calling on the modelling function\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "\n",
    "y_pred_forest, model_metrics_forest, rf = modelling (RandomForestClassifier(random_state=0, n_estimators=200,criterion='entropy', n_jobs=-1, max_depth = 70, min_samples_leaf=12), x_train_bal, x_test_bal, y_train_bal, y_test_bal)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 259,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(criterion='entropy', max_depth=70, min_samples_leaf=12,\n",
       "                       n_estimators=200, n_jobs=-1, random_state=0)"
      ]
     },
     "execution_count": 259,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#printing the model instantiated variable\n",
    "rf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model</th>\n",
       "      <th>Train_acc</th>\n",
       "      <th>Test_acc</th>\n",
       "      <th>Precision</th>\n",
       "      <th>Recall</th>\n",
       "      <th>F-score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>model</td>\n",
       "      <td>91.93712</td>\n",
       "      <td>84.615385</td>\n",
       "      <td>87.250996</td>\n",
       "      <td>83.269962</td>\n",
       "      <td>85.214008</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Model  Train_acc   Test_acc  Precision     Recall    F-score\n",
       "0  model   91.93712  84.615385  87.250996  83.269962  85.214008"
      ]
     },
     "execution_count": 208,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#printing the model metrics\n",
    "model_metrics_forest"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Comment\n",
    "\n",
    "We carried out some hyperparemeter tuning on the model, to reduce overfitting. We can equally see that we had excellent results in all the evaluation metrics."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([0, 0, 1, 0, 0, 1, 1, 0, 1, 1]), array([0, 0, 1, 0, 0, 1, 1, 0, 1, 1]))"
      ]
     },
     "execution_count": 186,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#printing the y prediction of random forest\n",
    "y_pred_forest[:10], y_test_bal[:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Confusion Matrix Random Forest Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 386,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create confusion matrix\n",
    "matrix8 = confusion_matrix(y_test_bal, y_pred_forest)\n",
    "\n",
    "dataframe8 = pd.DataFrame(matrix8, index=['Yes', 'No'], \n",
    "                         columns=['Yes', 'No'])\n",
    "\n",
    "# create heatmap\n",
    "sns.heatmap(dataframe8, annot=True, fmt=\"d\", cbar=None, cmap='Blues')\n",
    "plt.title('Confusion Matrix')\n",
    "plt.tight_layout(), plt.xlabel('Predicted Values'), plt.ylabel('True Values')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2. Gradient Boosting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 261,
   "metadata": {},
   "outputs": [],
   "source": [
    "#calling on the modelling function\n",
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "\n",
    "y_pred_grad, model_metrics_grad, gbc = modelling (GradientBoostingClassifier(n_estimators=100,random_state=100,max_features=6), x_train_bal, x_test_bal, y_train_bal, y_test_bal)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 262,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GradientBoostingClassifier(max_features=6, random_state=100)"
      ]
     },
     "execution_count": 262,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#printing the model instantiated variable\n",
    "gbc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 242,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model</th>\n",
       "      <th>Train_acc</th>\n",
       "      <th>Test_acc</th>\n",
       "      <th>Precision</th>\n",
       "      <th>Recall</th>\n",
       "      <th>F-score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>model</td>\n",
       "      <td>93.306288</td>\n",
       "      <td>87.651822</td>\n",
       "      <td>88.549618</td>\n",
       "      <td>88.212928</td>\n",
       "      <td>88.380952</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Model  Train_acc   Test_acc  Precision     Recall    F-score\n",
       "0  model  93.306288  87.651822  88.549618  88.212928  88.380952"
      ]
     },
     "execution_count": 242,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#printing the model_metrics\n",
    "model_metrics_grad"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Confusion Matrix Gradient Boosting Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 389,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create confusion matrix\n",
    "matrix88 = confusion_matrix(y_test_bal, y_pred_grad)\n",
    "\n",
    "dataframe88 = pd.DataFrame(matrix88, index=['Yes', 'No'], \n",
    "                         columns=['Yes', 'No'])\n",
    "\n",
    "# create heatmap\n",
    "sns.heatmap(dataframe88, annot=True, fmt=\"d\", cbar=None, cmap='Blues')\n",
    "plt.title('Confusion Matrix')\n",
    "plt.tight_layout(), plt.xlabel('Predicted Values'), plt.ylabel('True Values')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Comment\n",
    "\n",
    "We also carried out some hyperparameter tuning on the gradient boosting model. This was done to reduce over fitting. We can equally see that we had excellent results in all the evaluation metrics."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 243,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([0, 0, 1, 0, 0, 1, 1, 0, 1, 1]), array([0, 0, 1, 0, 0, 1, 1, 0, 1, 1]))"
      ]
     },
     "execution_count": 243,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#printing the y prediction of the model\n",
    "y_pred_grad[:10], y_test_bal[:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model Building with imbalanced data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1. Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 264,
   "metadata": {},
   "outputs": [],
   "source": [
    "#calling on the modelling function\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "\n",
    "y_pred_forest2, model_metrics_forest2, rf2 = modelling (RandomForestClassifier(), x_train_imb, x_test_imb, y_train_imb, y_test_imb)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 265,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier()"
      ]
     },
     "execution_count": 265,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#printing the model instantiated variable\n",
    "rf2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 251,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model</th>\n",
       "      <th>Train_acc</th>\n",
       "      <th>Test_acc</th>\n",
       "      <th>Precision</th>\n",
       "      <th>Recall</th>\n",
       "      <th>F-score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>model</td>\n",
       "      <td>100.0</td>\n",
       "      <td>85.37415</td>\n",
       "      <td>80.0</td>\n",
       "      <td>16.326531</td>\n",
       "      <td>27.118644</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Model  Train_acc  Test_acc  Precision     Recall    F-score\n",
       "0  model      100.0  85.37415       80.0  16.326531  27.118644"
      ]
     },
     "execution_count": 251,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#printing the model_metrics\n",
    "model_metrics_forest2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Comment\n",
    "\n",
    "From the output above, we can see that the model built with imbalanced data has extremely poor recall and f-score values. This emphasises the need to always carry out proper data preprocessing before model building. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 250,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([0, 0, 0, 0, 1, 0, 0, 0, 0, 0]), array([0, 0, 1, 0, 1, 0, 1, 0, 0, 1]))"
      ]
     },
     "execution_count": 250,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#printing the y prediction\n",
    "y_pred_forest2[:10], y_test_imb[:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2. Gradient Boosting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 266,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "\n",
    "y_pred_grad2, model_metrics_grad2, gbc2 = modelling (GradientBoostingClassifier(), x_train_imb, x_test_imb, y_train_imb, y_test_imb)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 267,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GradientBoostingClassifier()"
      ]
     },
     "execution_count": 267,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#printing the model instantiated variable\n",
    "gbc2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 253,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model</th>\n",
       "      <th>Train_acc</th>\n",
       "      <th>Test_acc</th>\n",
       "      <th>Precision</th>\n",
       "      <th>Recall</th>\n",
       "      <th>F-score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>model</td>\n",
       "      <td>96.003401</td>\n",
       "      <td>86.734694</td>\n",
       "      <td>72.727273</td>\n",
       "      <td>32.653061</td>\n",
       "      <td>45.070423</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Model  Train_acc   Test_acc  Precision     Recall    F-score\n",
       "0  model  96.003401  86.734694  72.727273  32.653061  45.070423"
      ]
     },
     "execution_count": 253,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#printing the model_metrics\n",
    "model_metrics_grad2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the output above, we can also see that the model built  with gradient boosting classifer on imbalanced data also performs poorly. It has poor precision, recall and f-score values. This also emphasized the need to carry out proper data preprocessing before model building. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 254,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([0, 0, 0, 0, 1, 0, 1, 0, 0, 0]), array([0, 0, 1, 0, 1, 0, 1, 0, 0, 1]))"
      ]
     },
     "execution_count": 254,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#printing the y prediction\n",
    "y_pred_grad2[:10], y_test_imb[:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## ROC Curve of our models built with balanced data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 330,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import roc_auc_score\n",
    "from sklearn.metrics import roc_curve\n",
    "\n",
    "#ROC for random forest\n",
    "rf_roc_auc = roc_auc_score(y_test_bal, rf.predict(x_test_bal))\n",
    "rf_fpr, rf_tpr, rf_thresholds = roc_curve(y_test_bal, rf.predict_proba(x_test_bal)[:,1])\n",
    "\n",
    "#ROC for Gradient boosting\n",
    "gbc_roc_auc = roc_auc_score(y_test_bal, gbc.predict(x_test_bal))\n",
    "gbc_fpr, gbc_tpr, gbc_thresholds = roc_curve(y_test_bal, gbc.predict_proba(x_test_bal)[:,1])\n",
    "\n",
    "#ROC Curve for Random Forest & Gradient Boosting\n",
    "plt.plot(rf_fpr, rf_tpr, label='Random Forest (area = %0.2f)' % rf_roc_auc)\n",
    "plt.plot(gbc_fpr, gbc_tpr, label='Gradient Boosting (area = %0.2f)' % gbc_roc_auc)\n",
    "plt.plot([0, 1], [0, 1],'r--')\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.05])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('Receiver operating characteristic')\n",
    "plt.legend(loc=\"lower right\")\n",
    "plt.savefig('ROC')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## ROC_AUC Score for our best models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 337,
   "metadata": {},
   "outputs": [],
   "source": [
    "#finding the probability of the prediction for random forest and gradient boosting with balanced data\n",
    "proba_rf = rf.predict_proba(x_test_bal)\n",
    "proba_gbc = gbc.predict_proba(x_test_bal)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 338,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "92.97% 94.19%\n"
     ]
    }
   ],
   "source": [
    "#importing the roc_auc score library\n",
    "from sklearn.metrics import roc_auc_score\n",
    "\n",
    "# auc scores\n",
    "auc_score_rf = (roc_auc_score(y_test_bal, proba_rf[:,1]) * 100).round(2).astype(str) + \"%\"\n",
    "auc_score_gbc = (roc_auc_score(y_test_bal, proba_gbc[:,1]) * 100).round(2).astype(str) + \"%\"\n",
    "\n",
    "print(auc_score_rf, auc_score_gbc)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Comment\n",
    "\n",
    "The AUC score of random forest model on the test set is 92.97% while that of grandient boosting is 94.19%. Based on AUC score analysis on the prediction probabilities, we can conclude that the gradient boosting model performs slightly better at distinguishing between the positive and negative classes when the features were used for prediction, as it has a higher AUC score."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Feature importance for random forest model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 314,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA3AAAALBCAYAAAAZC0OzAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/MnkTPAAAACXBIWXMAAAsTAAALEwEAmpwYAACUwElEQVR4nOzdd5ycVfXH8e+XAFIDKlGRFkQUEaUI0izYRVRsNAUUC2IFrGBFsIAiKvwURIqKqIAVASkioEhRehFQRJQqoFKkSPH8/jh3srOT2ZLMfWbzJJ/365VXMjO7985md2eec++55zgiBAAAAACY9y001U8AAAAAADA5BHAAAAAA0BIEcAAAAADQEgRwAAAAANASBHAAAAAA0BIEcAAAAADQEgRwAAAAANASBHAAAEmS7ett32/7P11/nlhhzBfXeo6TmG8v298b1nzjsf0W22dP9fPoZftM2w+U7+8dtn9ie/mux/ey/VDPz8FHpvI5AwBGEMABALq9KiKW6vpz81Q+GdsLT+X8c6sFz/u9EbGUpCdLWkrS/j2PH9Pzc/DF4T9FAEA/BHAAgHHZXsb24bZvsX2T7c/anlYeW832r23/s+zmHG172fLYUZJWlvSLzi6O7c1s39gz/qxdurL78yPb37N9t6S3jDf/JJ572H637T/bvsf2PuU5n2v7btvH2l60fOxmtm+0/bHytVxv+009/w/ftX277b/Z/oTthcpjb7H9O9tfsf0vScdIOkTSxuVrv7N83Ba2Ly5z32B7r67xZ5bn+2bbfy/P4eNdj08rz+0v5Wu50PZK5bE1bJ9m+1+2r7G99WT+fyLiTkk/k7TOZD4eADD1COAAABP5jqSHlbs160p6qaS3l8cs6QuSnijpaZJWkrSXJEXEDpL+rpFdvcnu4mwp6UeSlpV09ATzT8bLJT1L0kaSPiLpUElvKs91LUnbdX3sEyQtJ2kFSW+WdKjtp5bHDpK0jKQnSXq+pB0l7dT1uRtKuk7S4yRtL2kXSeeWr33Z8jH3ls9bVtIWkt5l+zU9z/c5kp4q6UWSPmX7aeX+D5Tn+gpJ0yW9VdJ9tpeUdJqk75e5t5P0DdtPn+g/xvZjJb1O0rUTfSwAYN5AAAcA6PYz23eWPz+z/XhJm0vaLSLujYjbJH1F0raSFBHXRsRpEfHfiLhd0gHK4GYQ50bEzyLif8pAZcz5J2m/iLg7Iq6UdIWkUyPiuoi4S9IvlUFht0+Wr+csSSdK2rrs+G0jac+IuCcirpf0ZUk7dH3ezRFxUEQ8HBH393siEXFmRFweEf+LiMsk/UCz/399JiLuj4hLJV0qae1y/9slfSIirol0aUT8U9IrJV0fEUeWuS+S9GNJbxjn/+RA23dJukMZsL6v5/Gtu34O7hz0LCQAoJ55PUcfADBcr4mIX3Vu2H62pEUk3WK7c/dCkm4ojz9O0oGSnitp6fLYvwd8Djd0/XuV8eafpH90/fv+Pref0HX73xFxb9ftvyl3F5eTtGi53f3YCmM8775sbyhpX+XO36KSHiXpuJ4Pu7Xr3/cpz6hJuWP4lz7DriJpw06aZrGwpKPGeSrvj4jDbD9D0gmSVlTulnYcGxHbj//VAACmAjtwAIDx3CDpv5KWi4hly5/pEdFJz/uCpJD0zIiYrkwddNfnR89490paonOj7GzN6PmY7s+ZaP7aHl1SEjtWlnSzcqfqIWWw1P3YTWM87363pUxzPF7SShGxjPKcnPt8XD83SFptjPvP6vr/Wbakbb5rogEj4nJJn5X0dXdFyACAeRcBHABgTBFxi6RTJX3Z9nTbC5UiIJ20v6Ul/UfSnbZXkPThniH+oTwz1vEnSYuVYh6LSPqEchdqbudvwmdsL2r7ucr0xOMi4hFJx0r6nO2lba+iPJM2XsuCf0hasVMkpVha0r8i4oGyu/nGOXheh0nax/bqTs8sZ9hOkPQU2zvYXqT82aDr7NxEvqM8O/fqOXguAIApQgAHAJjIjsp0vz8q0yN/JKnTN+wzktaTdJfyvNhPej73C5I+Uc5RfaicO3u3Mhi5Sbkjd6PGN978td1a5rhZWUBll4i4ujz2PuXzvU7S2crdtCPGGevXkq6UdKvtO8p975a0t+17JH1KGRRO1gHl40+VdLekwyUtHhH3KAu7bFue962S9tM4gXG3iHhQmQb7yTl4LgCAKeKIfhkeAAAsWGxvJul7EbHiFD8VAADGxA4cAAAAALQEARwAAAAAtAQplAAAAADQEuzAAQAAAEBLEMABAAAAQEssPNVPoJ/lllsuZs6cOdVPAwAAAACmxIUXXnhHRMzovX+eDOBmzpypCy64YKqfBgAAAABMCdt/63c/KZQAAAAA0BIEcAAAAADQEgRwAAAAANASBHAAAAAA0BIEcAAAAADQEgRwAAAAANASBHAAAAAA0BIEcAAAAADQEgRwAAAAANASBHAAAAAA0BIEcAAAAADQEgRwAAAAANASBHAAAAAA0BIEcAAAAADQEgRwAAAAANASBHAAAAAA0BIEcAAAAADQEgRwAAAAANASBHAAAAAA0BIEcAAAAADQEgRwAAAAANASBHAAAAAA0BIEcAAAAADQEgtP9RNok5l7nFhtrOv33aLaWAAAAAAWDOzAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABAS0wqgLP9ctvX2L7W9h59Hl/D9rm2/2v7Q3PyuQAAAACAyZkwgLM9TdLXJW0uaU1J29les+fD/iXp/ZL2n4vPBQAAAABMwmR24J4t6dqIuC4iHpT0Q0lbdn9ARNwWEX+Q9NCcfi4AAAAAYHImE8CtIOmGrts3lvsmY5DPBQAAAAB0mUwA5z73xSTHn/Tn2t7Z9gW2L7j99tsnOTwAAAAALDgmE8DdKGmlrtsrSrp5kuNP+nMj4tCIWD8i1p8xY8YkhwcAAACABcdkArg/SFrd9qq2F5W0raTjJzn+IJ8LAAAAAOiy8EQfEBEP236vpFMkTZN0RERcaXuX8vghtp8g6QJJ0yX9z/ZuktaMiLv7fW5DXwsAAAAAzNcmDOAkKSJOknRSz32HdP37VmV65KQ+FwAAAAAw5ybVyBsAAAAAMPUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlFp7qJ4ARM/c4sep41++7RdXxAAAAAEwtduAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUmFcDZfrnta2xfa3uPPo/b9oHl8ctsr9f12O62r7R9he0f2F6s5hcAAAAAAAuKCQM429MkfV3S5pLWlLSd7TV7PmxzSauXPztLOrh87gqS3i9p/YhYS9I0SdtWe/YAAAAAsACZzA7csyVdGxHXRcSDkn4oacuej9lS0ncjnSdpWdvLl8cWlrS47YUlLSHp5krPHQAAAAAWKJMJ4FaQdEPX7RvLfRN+TETcJGl/SX+XdIukuyLi1Ll/ugAAAACw4JpMAOc+98VkPsb2o5W7c6tKeqKkJW1v33cSe2fbF9i+4Pbbb5/E0wIAAACABctkArgbJa3UdXtFzZ4GOdbHvFjSXyPi9oh4SNJPJG3Sb5KIODQi1o+I9WfMmDHZ5w8AAAAAC4zJBHB/kLS67VVtL6osQnJ8z8ccL2nHUo1yI2Wq5C3K1MmNbC9h25JeJOmqis8fAAAAABYYC0/0ARHxsO33SjpFWUXyiIi40vYu5fFDJJ0k6RWSrpV0n6SdymPn2/6RpIskPSzpYkmHNvGFAAAAAMD8bsIATpIi4iRlkNZ93yFd/w5J7xnjcz8t6dMDPEcAAAAAgCbZyBsAAAAAMPUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUWnuongOGauceJVce7ft8tqo4HAAAAYGzswAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASxDAAQAAAEBLEMABAAAAQEsQwAEAAABASyw81U8A85+Ze5xYbazr992i2lgAAABA27EDBwAAAAAtQQAHAAAAAC1BAAcAAAAALUEABwAAAAAtQQAHAAAAAC1BAAcAAAAALUEABwAAAAAtQQAHAAAAAC1BAAcAAAAALUEABwAAAAAtQQAHAAAAAC1BAAcAAAAALUEABwAAAAAtMakAzvbLbV9j+1rbe/R53LYPLI9fZnu9rseWtf0j21fbvsr2xjW/AAAAAABYUEwYwNmeJunrkjaXtKak7Wyv2fNhm0tavfzZWdLBXY99TdLJEbGGpLUlXVXheQMAAADAAmcyO3DPlnRtRFwXEQ9K+qGkLXs+ZktJ3410nqRlbS9ve7qk50k6XJIi4sGIuLPe0wcAAACABcdkArgVJN3QdfvGct9kPuZJkm6XdKTti20fZnvJfpPY3tn2BbYvuP322yf9BQAAAADAgmIyAZz73BeT/JiFJa0n6eCIWFfSvZJmO0MnSRFxaESsHxHrz5gxYxJPCwAAAAAWLJMJ4G6UtFLX7RUl3TzJj7lR0o0RcX65/0fKgA4AAAAAMIcmE8D9QdLqtle1vaikbSUd3/Mxx0vasVSj3EjSXRFxS0TcKukG208tH/ciSX+s9eQBAAAAYEGy8EQfEBEP236vpFMkTZN0RERcaXuX8vghkk6S9ApJ10q6T9JOXUO8T9LRJfi7rucxAAAAAMAkTRjASVJEnKQM0rrvO6Tr3yHpPWN87iWS1p/7pwgAAAAAkCbZyBsAAAAAMPUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUI4AAAAACgJQjgAAAAAKAlCOAAAAAAoCUWnuonAMypmXucWHW86/fdoup4AAAAQFPYgQMAAACAliCAAwAAAICWIIADAAAAgJYggAMAAACAliCAAwAAAICWIIADAAAAgJYggAMAAACAliCAAwAAAICWIIADAAAAgJYggAMAAACAliCAAwAAAICWIIADAAAAgJYggAMAAACAliCAAwAAAICWIIADAAAAgJYggAMAAACAliCAAwAAAICWIIADAAAAgJYggAMAAACAliCAAwAAAICWIIADAAAAgJYggAMAAACAliCAAwAAAICWIIADAAAAgJYggAMAAACAliCAAwAAAICWIIADAAAAgJYggAMAAACAliCAAwAAAICWIIADAAAAgJYggAMAAACAliCAAwAAAICWIIADAAAAgJYggAMAAACAliCAAwAAAICWIIADAAAAgJYggAMAAACAllh4qp8AMC+auceJVce7ft8tqo4HAACABRM7cAAAAADQEgRwAAAAANASBHAAAAAA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",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# calculating the features importance of each feature in the model\n",
    "importances = rf.feature_importances_\n",
    "\n",
    "# sort in descending order\n",
    "indices = np.argsort(importances)[::-1]\n",
    "\n",
    "# Arrange feature names to match the sorted feature importances\n",
    "names = [features.columns[i] for i in indices]\n",
    "plt.figure(figsize = (15, 10))\n",
    "plt.title(\"Feature Importance RF\")\n",
    "plt.bar(range(features.shape[1]), importances[indices])\n",
    "plt.xticks(range(features.shape[1]), names, rotation=90) \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 328,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.feature_selection import SelectFromModel\n",
    "# Create random forest classifier\n",
    "randomforest = RandomForestClassifier(random_state=0, n_jobs=-1, max_depth = 4)\n",
    "\n",
    "# Create object that selects features with importance greater than or equal to the threshold - 0.035\n",
    "selector = SelectFromModel(randomforest, threshold=0.035)\n",
    "    \n",
    "# Feature new feature matrix using selector\n",
    "features_important = selector.fit_transform(x_train_bal, y_train_bal) # Train random forest using most important featres\n",
    "\n",
    "rf_model = randomforest.fit(features_important, y_train_bal)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 329,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Random forest training accuracy with features selected: 0.8256\n",
      "Random forest validation accuracy with features selected: 0.7692\n"
     ]
    }
   ],
   "source": [
    "# transform validation set to select the important features\n",
    "test_features = selector.transform(x_test_bal)\n",
    "\n",
    "print(\"Random forest training accuracy with features selected: {:.4f}\".format(rf_model.score(features_important, \n",
    "                                                                                             y_train_bal)))\n",
    "print(\"Random forest validation accuracy with features selected: {:.4f}\".format(rf_model.score(test_features, \n",
    "                                                                                               y_test_bal)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We set the features importance threshold to be 0.035"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Feature importance for gradient boosting model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 313,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# calculating the features importance of each feature in the model\n",
    "importances = gbc.feature_importances_\n",
    "\n",
    "# sort in descending order\n",
    "indices = np.argsort(importances)[::-1]\n",
    "\n",
    "# Rearrange feature names so they match the sorted feature importances\n",
    "names = [features.columns[i] for i in indices]\n",
    "\n",
    "plt.figure(figsize = (15, 10))\n",
    "plt.title(\"Feature Importance GBC\") \n",
    "plt.bar(range(features.shape[1]), importances[indices]) \n",
    "plt.xticks(range(features.shape[1]), names, rotation=90) \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 326,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.feature_selection import SelectFromModel\n",
    "# Create gradientboosting classifier\n",
    "gradientbc = GradientBoostingClassifier(n_estimators=100,random_state=100,max_features=6)\n",
    "\n",
    "# Create object that selects features with importance greater # than or equal to a threshold\n",
    "selector = SelectFromModel(gradientbc, threshold=0.035)\n",
    "    \n",
    "# Feature new feature matrix using selector\n",
    "features_important2 = selector.fit_transform(x_train_bal, y_train_bal) # Train gradient bc using most important featres\n",
    "\n",
    "gbc_model = gradientbc.fit(features_important2, y_train_bal)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 327,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Gradient boosting training accuracy with features selected: 0.8960\n",
      "Gradient boosting validation accuracy with features selected: 0.8340\n"
     ]
    }
   ],
   "source": [
    "# transform the validation set to select the important features\n",
    "test_features2 = selector.transform(x_test_bal)\n",
    "\n",
    "print(\"Gradient boosting training accuracy with features selected: {:.4f}\".format(gbc_model.score(features_important2, \n",
    "                                                                                             y_train_bal)))\n",
    "print(\"Gradient boosting validation accuracy with features selected: {:.4f}\".format(gbc_model.score(test_features2, \n",
    "                                                                                               y_test_bal)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### AUC Score on the test set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 335,
   "metadata": {},
   "outputs": [],
   "source": [
    "#finding the probability of the prediction for random forest and gradient boosting with balanced data on the test set\n",
    "proba_rf_feat = rf_model.predict_proba(test_features)\n",
    "proba_gbc_feat = gbc_model.predict_proba(test_features2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 336,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "85.8% 92.03%\n"
     ]
    }
   ],
   "source": [
    "#importing the roc_auc score library\n",
    "from sklearn.metrics import roc_auc_score\n",
    "\n",
    "# auc scores\n",
    "auc_score_rf_feat = (roc_auc_score(y_test_bal, proba_rf_feat[:,1]) * 100).round(2).astype(str) + \"%\"\n",
    "auc_score_gbc_feat = (roc_auc_score(y_test_bal, proba_gbc_feat[:,1]) * 100).round(2).astype(str) + \"%\"\n",
    "\n",
    "print(auc_score_rf_feat, auc_score_gbc_feat)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the output above, we can say that the gradient boosting model performed better than random forest, when we carried out features selection using the same threshold value of 0.35 for the features selection for both models"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Conclusion\n",
    "\n",
    "Through this project, we created a machine learning model that is able to predict an employee resigning from an organisation. The best model was gradient boosting classifier model, it perform better both when we used selected features to build our model and when we used all the features of the employees to build our model.\n",
    "\n",
    "Based on our features selection exercise using gradient boosting at a threshold of 0.35 and above, we were able to come up with top 10 features for which employee attrition highly depends on. They are:\n",
    "\n",
    "* StockOptionLevel\n",
    "* JobSatisfaction\n",
    "* JobInvolvement\n",
    "* EnvironmentSatisfaction\n",
    "* MonthlyIncome($)\n",
    "* JobLevel\n",
    "* RelationshipSatisfaction\n",
    "* BusinessTravel\n",
    "* YearsWithCurrManager\n",
    "* TrainingTimesLastYear'\n",
    "\n",
    "The company should therefore critically look into these 10 factors and find out ways to improve on them inorder to cub the issue of losing more staff. It was equally observed that the StockOptionLevel factor was very high compare to others."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Thank You"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "02f1e718d81c6874e3d961c6886974b5fa614f82bd8a8dc80c2a6f4e826c9fa4"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
